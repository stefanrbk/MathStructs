name: Build, Test, Pack

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CORE_SDK_VERSION: 5.0.100-rc.2.20479.15
  SOLUTION_PATH: './MathStructs.sln'
  TEST_RESULTS_PATH: './Tests/TestResults/**'
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-test-pack-job:
    name: 'Build, test, & pack solution'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Setup ARM Container
      if: matrix.os == 'ubuntu-latest'
      run: |
        docker run --rm --privileged multiarch/qemu-user-static:register --reset
        
    - if: matrix.os == 'ubuntu-latest'
      uses: docker://multiarch/ubuntu-core:arm64-bionic
      with:
        args: 'uname -a'
        
    - if: matrix.os == 'ubuntu-latest'
      uses: docker://multiarch/ubuntu-core:arm64-bionic
      with:
        args: >
          bash -c
          "apt-get update &&
          apt-get install -y wget libc6 libgcc1 libgssapi-krb5-2 libicu60 libssl1.1 libstdc++6 zlib1g &&
          wget -nv https://dot.net/v1/dotnet-install.sh &&
          chmod +x dotnet-install.sh &&
          ./dotnet-install.sh -c Current &&
          PATH=/github/home/.dotnet:$PATH &&
          dotnet --info"

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '${{ env.DOTNET_CORE_SDK_VERSION }}'

    - name: Install dependencies
      run: dotnet restore '${{ env.SOLUTION_PATH }}' --verbosity quiet

    - name: Build x86
      run: dotnet build '${{ env.SOLUTION_PATH }}' --nologo --verbosity minimal --configuration Release

    - name: Test x86
      run: dotnet test '${{ env.SOLUTION_PATH }}' --nologo --no-build --logger trx --verbosity normal --configuration Release

    - name: Pack
      if: matrix.os == 'ubuntu-latest'
      run: dotnet pack '${{ env.SOLUTION_PATH }}' --output './nuget-packages' --verbosity minimal --configuration Release --no-build

    - name: Save NuGet package to Action
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: nuget-packages
        path: './nuget-packages/*/**'
    
    - name: Save test log to Action
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: test-logs
        path: ${{ env.TEST_RESULTS_PATH }}
