### YamlMime:ManagedReference
items:
- uid: MathStructs.PlaneF
  commentId: T:MathStructs.PlaneF
  id: PlaneF
  parent: MathStructs
  children:
  - MathStructs.PlaneF.#ctor(MathStructs.Vector3F,System.Single)
  - MathStructs.PlaneF.#ctor(MathStructs.Vector4F)
  - MathStructs.PlaneF.#ctor(System.Single,System.Single,System.Single,System.Single)
  - MathStructs.PlaneF.CreateFromVertices(MathStructs.Vector3F,MathStructs.Vector3F,MathStructs.Vector3F)
  - MathStructs.PlaneF.D
  - MathStructs.PlaneF.Deconstruct(MathStructs.Vector3F@,System.Single@)
  - MathStructs.PlaneF.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  - MathStructs.PlaneF.Dot(MathStructs.PlaneF,MathStructs.Vector4F)
  - MathStructs.PlaneF.Dot(MathStructs.Vector4F)
  - MathStructs.PlaneF.DotCoordinate(MathStructs.PlaneF,MathStructs.Vector3F)
  - MathStructs.PlaneF.DotCoordinate(MathStructs.Vector3F)
  - MathStructs.PlaneF.DotNormal(MathStructs.PlaneF,MathStructs.Vector3F)
  - MathStructs.PlaneF.DotNormal(MathStructs.Vector3F)
  - MathStructs.PlaneF.Equals(MathStructs.PlaneF)
  - MathStructs.PlaneF.Equals(System.Nullable{System.Object})
  - MathStructs.PlaneF.GetHashCode
  - MathStructs.PlaneF.Normal
  - MathStructs.PlaneF.Normalize
  - MathStructs.PlaneF.Normalize(MathStructs.PlaneF)
  - MathStructs.PlaneF.op_Equality(MathStructs.PlaneF,MathStructs.PlaneF)
  - MathStructs.PlaneF.op_Inequality(MathStructs.PlaneF,MathStructs.PlaneF)
  - MathStructs.PlaneF.ToString
  - MathStructs.PlaneF.Transform(MathStructs.Matrix4x4F)
  - MathStructs.PlaneF.Transform(MathStructs.PlaneF,MathStructs.Matrix4x4F)
  - MathStructs.PlaneF.Transform(MathStructs.PlaneF,MathStructs.QuaternionF)
  - MathStructs.PlaneF.Transform(MathStructs.QuaternionF)
  langs:
  - csharp
  - vb
  name: PlaneF
  nameWithType: PlaneF
  fullName: MathStructs.PlaneF
  type: Struct
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: PlaneF
    path: PlaneF.cs
    startLine: 8
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public struct PlaneF
    content.vb: Public Structure PlaneF
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: MathStructs.PlaneF.Normal
  commentId: F:MathStructs.PlaneF.Normal
  id: Normal
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Normal
  nameWithType: PlaneF.Normal
  fullName: MathStructs.PlaneF.Normal
  type: Field
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Normal
    path: PlaneF.cs
    startLine: 13
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public Vector3F Normal
    return:
      type: MathStructs.Vector3F
    content.vb: Public Normal As Vector3F
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.D
  commentId: F:MathStructs.PlaneF.D
  id: D
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: D
  nameWithType: PlaneF.D
  fullName: MathStructs.PlaneF.D
  type: Field
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: D
    path: PlaneF.cs
    startLine: 15
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public float D
    return:
      type: System.Single
    content.vb: Public D As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:MathStructs.PlaneF.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: PlaneF(Single, Single, Single, Single)
  nameWithType: PlaneF.PlaneF(Single, Single, Single, Single)
  fullName: MathStructs.PlaneF.PlaneF(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: .ctor
    path: PlaneF.cs
    startLine: 17
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public PlaneF(float x, float y, float z, float d)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    - id: d
      type: System.Single
    content.vb: Public Sub New(x As Single, y As Single, z As Single, d As Single)
  overload: MathStructs.PlaneF.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.#ctor(MathStructs.Vector3F,System.Single)
  commentId: M:MathStructs.PlaneF.#ctor(MathStructs.Vector3F,System.Single)
  id: '#ctor(MathStructs.Vector3F,System.Single)'
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: PlaneF(Vector3F, Single)
  nameWithType: PlaneF.PlaneF(Vector3F, Single)
  fullName: MathStructs.PlaneF.PlaneF(MathStructs.Vector3F, System.Single)
  type: Constructor
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: .ctor
    path: PlaneF.cs
    startLine: 23
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public PlaneF(Vector3F normal, float d)
    parameters:
    - id: normal
      type: MathStructs.Vector3F
    - id: d
      type: System.Single
    content.vb: Public Sub New(normal As Vector3F, d As Single)
  overload: MathStructs.PlaneF.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.#ctor(MathStructs.Vector4F)
  commentId: M:MathStructs.PlaneF.#ctor(MathStructs.Vector4F)
  id: '#ctor(MathStructs.Vector4F)'
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: PlaneF(Vector4F)
  nameWithType: PlaneF.PlaneF(Vector4F)
  fullName: MathStructs.PlaneF.PlaneF(MathStructs.Vector4F)
  type: Constructor
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: .ctor
    path: PlaneF.cs
    startLine: 26
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public PlaneF(Vector4F value)
    parameters:
    - id: value
      type: MathStructs.Vector4F
    content.vb: Public Sub New(value As Vector4F)
  overload: MathStructs.PlaneF.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.Deconstruct(MathStructs.Vector3F@,System.Single@)
  commentId: M:MathStructs.PlaneF.Deconstruct(MathStructs.Vector3F@,System.Single@)
  id: Deconstruct(MathStructs.Vector3F@,System.Single@)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Deconstruct(out Vector3F, out Single)
  nameWithType: PlaneF.Deconstruct(out Vector3F, out Single)
  fullName: MathStructs.PlaneF.Deconstruct(out MathStructs.Vector3F, out System.Single)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Deconstruct
    path: PlaneF.cs
    startLine: 29
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public void Deconstruct(out Vector3F normal, out float d)
    parameters:
    - id: normal
      type: MathStructs.Vector3F
    - id: d
      type: System.Single
    content.vb: Public Sub Deconstruct(ByRef normal As Vector3F, ByRef d As Single)
  overload: MathStructs.PlaneF.Deconstruct*
  nameWithType.vb: PlaneF.Deconstruct(ByRef Vector3F, ByRef Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MathStructs.PlaneF.Deconstruct(ByRef MathStructs.Vector3F, ByRef System.Single)
  name.vb: Deconstruct(ByRef Vector3F, ByRef Single)
- uid: MathStructs.PlaneF.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:MathStructs.PlaneF.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  id: Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Deconstruct(out Single, out Single, out Single, out Single)
  nameWithType: PlaneF.Deconstruct(out Single, out Single, out Single, out Single)
  fullName: MathStructs.PlaneF.Deconstruct(out System.Single, out System.Single, out System.Single, out System.Single)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Deconstruct
    path: PlaneF.cs
    startLine: 32
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public void Deconstruct(out float x, out float y, out float z, out float d)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    - id: d
      type: System.Single
    content.vb: Public Sub Deconstruct(ByRef x As Single, ByRef y As Single, ByRef z As Single, ByRef d As Single)
  overload: MathStructs.PlaneF.Deconstruct*
  nameWithType.vb: PlaneF.Deconstruct(ByRef Single, ByRef Single, ByRef Single, ByRef Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MathStructs.PlaneF.Deconstruct(ByRef System.Single, ByRef System.Single, ByRef System.Single, ByRef System.Single)
  name.vb: Deconstruct(ByRef Single, ByRef Single, ByRef Single, ByRef Single)
- uid: MathStructs.PlaneF.CreateFromVertices(MathStructs.Vector3F,MathStructs.Vector3F,MathStructs.Vector3F)
  commentId: M:MathStructs.PlaneF.CreateFromVertices(MathStructs.Vector3F,MathStructs.Vector3F,MathStructs.Vector3F)
  id: CreateFromVertices(MathStructs.Vector3F,MathStructs.Vector3F,MathStructs.Vector3F)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: CreateFromVertices(Vector3F, Vector3F, Vector3F)
  nameWithType: PlaneF.CreateFromVertices(Vector3F, Vector3F, Vector3F)
  fullName: MathStructs.PlaneF.CreateFromVertices(MathStructs.Vector3F, MathStructs.Vector3F, MathStructs.Vector3F)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateFromVertices
    path: PlaneF.cs
    startLine: 35
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public static PlaneF CreateFromVertices(Vector3F point1, Vector3F point2, Vector3F point3)
    parameters:
    - id: point1
      type: MathStructs.Vector3F
    - id: point2
      type: MathStructs.Vector3F
    - id: point3
      type: MathStructs.Vector3F
    return:
      type: MathStructs.PlaneF
    content.vb: Public Shared Function CreateFromVertices(point1 As Vector3F, point2 As Vector3F, point3 As Vector3F) As PlaneF
  overload: MathStructs.PlaneF.CreateFromVertices*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.PlaneF.Normalize
  commentId: M:MathStructs.PlaneF.Normalize
  id: Normalize
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: PlaneF.Normalize()
  fullName: MathStructs.PlaneF.Normalize()
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Normalize
    path: PlaneF.cs
    startLine: 46
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public PlaneF Normalize()
    return:
      type: MathStructs.PlaneF
    content.vb: Public Function Normalize As PlaneF
  overload: MathStructs.PlaneF.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.Normalize(MathStructs.PlaneF)
  commentId: M:MathStructs.PlaneF.Normalize(MathStructs.PlaneF)
  id: Normalize(MathStructs.PlaneF)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Normalize(PlaneF)
  nameWithType: PlaneF.Normalize(PlaneF)
  fullName: MathStructs.PlaneF.Normalize(MathStructs.PlaneF)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Normalize
    path: PlaneF.cs
    startLine: 56
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public static PlaneF Normalize(PlaneF value)
    parameters:
    - id: value
      type: MathStructs.PlaneF
    return:
      type: MathStructs.PlaneF
    content.vb: Public Shared Function Normalize(value As PlaneF) As PlaneF
  overload: MathStructs.PlaneF.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.PlaneF.Transform(MathStructs.PlaneF,MathStructs.Matrix4x4F)
  commentId: M:MathStructs.PlaneF.Transform(MathStructs.PlaneF,MathStructs.Matrix4x4F)
  id: Transform(MathStructs.PlaneF,MathStructs.Matrix4x4F)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Transform(PlaneF, Matrix4x4F)
  nameWithType: PlaneF.Transform(PlaneF, Matrix4x4F)
  fullName: MathStructs.PlaneF.Transform(MathStructs.PlaneF, MathStructs.Matrix4x4F)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Transform
    path: PlaneF.cs
    startLine: 60
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public static PlaneF Transform(PlaneF plane, Matrix4x4F matrix)
    parameters:
    - id: plane
      type: MathStructs.PlaneF
    - id: matrix
      type: MathStructs.Matrix4x4F
    return:
      type: MathStructs.PlaneF
    content.vb: Public Shared Function Transform(plane As PlaneF, matrix As Matrix4x4F) As PlaneF
  overload: MathStructs.PlaneF.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.PlaneF.Transform(MathStructs.Matrix4x4F)
  commentId: M:MathStructs.PlaneF.Transform(MathStructs.Matrix4x4F)
  id: Transform(MathStructs.Matrix4x4F)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Transform(Matrix4x4F)
  nameWithType: PlaneF.Transform(Matrix4x4F)
  fullName: MathStructs.PlaneF.Transform(MathStructs.Matrix4x4F)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Transform
    path: PlaneF.cs
    startLine: 71
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public PlaneF Transform(Matrix4x4F matrix)
    parameters:
    - id: matrix
      type: MathStructs.Matrix4x4F
    return:
      type: MathStructs.PlaneF
    content.vb: Public Function Transform(matrix As Matrix4x4F) As PlaneF
  overload: MathStructs.PlaneF.Transform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.Transform(MathStructs.PlaneF,MathStructs.QuaternionF)
  commentId: M:MathStructs.PlaneF.Transform(MathStructs.PlaneF,MathStructs.QuaternionF)
  id: Transform(MathStructs.PlaneF,MathStructs.QuaternionF)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Transform(PlaneF, QuaternionF)
  nameWithType: PlaneF.Transform(PlaneF, QuaternionF)
  fullName: MathStructs.PlaneF.Transform(MathStructs.PlaneF, MathStructs.QuaternionF)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Transform
    path: PlaneF.cs
    startLine: 75
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public static PlaneF Transform(PlaneF plane, QuaternionF rotation)
    parameters:
    - id: plane
      type: MathStructs.PlaneF
    - id: rotation
      type: MathStructs.QuaternionF
    return:
      type: MathStructs.PlaneF
    content.vb: Public Shared Function Transform(plane As PlaneF, rotation As QuaternionF) As PlaneF
  overload: MathStructs.PlaneF.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.PlaneF.Transform(MathStructs.QuaternionF)
  commentId: M:MathStructs.PlaneF.Transform(MathStructs.QuaternionF)
  id: Transform(MathStructs.QuaternionF)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Transform(QuaternionF)
  nameWithType: PlaneF.Transform(QuaternionF)
  fullName: MathStructs.PlaneF.Transform(MathStructs.QuaternionF)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Transform
    path: PlaneF.cs
    startLine: 105
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public PlaneF Transform(QuaternionF rotation)
    parameters:
    - id: rotation
      type: MathStructs.QuaternionF
    return:
      type: MathStructs.PlaneF
    content.vb: Public Function Transform(rotation As QuaternionF) As PlaneF
  overload: MathStructs.PlaneF.Transform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.Dot(MathStructs.Vector4F)
  commentId: M:MathStructs.PlaneF.Dot(MathStructs.Vector4F)
  id: Dot(MathStructs.Vector4F)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Dot(Vector4F)
  nameWithType: PlaneF.Dot(Vector4F)
  fullName: MathStructs.PlaneF.Dot(MathStructs.Vector4F)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Dot
    path: PlaneF.cs
    startLine: 109
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public float Dot(Vector4F value)
    parameters:
    - id: value
      type: MathStructs.Vector4F
    return:
      type: System.Single
    content.vb: Public Function Dot(value As Vector4F) As Single
  overload: MathStructs.PlaneF.Dot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.Dot(MathStructs.PlaneF,MathStructs.Vector4F)
  commentId: M:MathStructs.PlaneF.Dot(MathStructs.PlaneF,MathStructs.Vector4F)
  id: Dot(MathStructs.PlaneF,MathStructs.Vector4F)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Dot(PlaneF, Vector4F)
  nameWithType: PlaneF.Dot(PlaneF, Vector4F)
  fullName: MathStructs.PlaneF.Dot(MathStructs.PlaneF, MathStructs.Vector4F)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Dot
    path: PlaneF.cs
    startLine: 113
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public static float Dot(PlaneF plane, Vector4F value)
    parameters:
    - id: plane
      type: MathStructs.PlaneF
    - id: value
      type: MathStructs.Vector4F
    return:
      type: System.Single
    content.vb: Public Shared Function Dot(plane As PlaneF, value As Vector4F) As Single
  overload: MathStructs.PlaneF.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.PlaneF.DotCoordinate(MathStructs.Vector3F)
  commentId: M:MathStructs.PlaneF.DotCoordinate(MathStructs.Vector3F)
  id: DotCoordinate(MathStructs.Vector3F)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: DotCoordinate(Vector3F)
  nameWithType: PlaneF.DotCoordinate(Vector3F)
  fullName: MathStructs.PlaneF.DotCoordinate(MathStructs.Vector3F)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: DotCoordinate
    path: PlaneF.cs
    startLine: 117
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public float DotCoordinate(Vector3F value)
    parameters:
    - id: value
      type: MathStructs.Vector3F
    return:
      type: System.Single
    content.vb: Public Function DotCoordinate(value As Vector3F) As Single
  overload: MathStructs.PlaneF.DotCoordinate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.DotCoordinate(MathStructs.PlaneF,MathStructs.Vector3F)
  commentId: M:MathStructs.PlaneF.DotCoordinate(MathStructs.PlaneF,MathStructs.Vector3F)
  id: DotCoordinate(MathStructs.PlaneF,MathStructs.Vector3F)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: DotCoordinate(PlaneF, Vector3F)
  nameWithType: PlaneF.DotCoordinate(PlaneF, Vector3F)
  fullName: MathStructs.PlaneF.DotCoordinate(MathStructs.PlaneF, MathStructs.Vector3F)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: DotCoordinate
    path: PlaneF.cs
    startLine: 121
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public static float DotCoordinate(PlaneF plane, Vector3F value)
    parameters:
    - id: plane
      type: MathStructs.PlaneF
    - id: value
      type: MathStructs.Vector3F
    return:
      type: System.Single
    content.vb: Public Shared Function DotCoordinate(plane As PlaneF, value As Vector3F) As Single
  overload: MathStructs.PlaneF.DotCoordinate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.PlaneF.DotNormal(MathStructs.Vector3F)
  commentId: M:MathStructs.PlaneF.DotNormal(MathStructs.Vector3F)
  id: DotNormal(MathStructs.Vector3F)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: DotNormal(Vector3F)
  nameWithType: PlaneF.DotNormal(Vector3F)
  fullName: MathStructs.PlaneF.DotNormal(MathStructs.Vector3F)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: DotNormal
    path: PlaneF.cs
    startLine: 125
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public float DotNormal(Vector3F value)
    parameters:
    - id: value
      type: MathStructs.Vector3F
    return:
      type: System.Single
    content.vb: Public Function DotNormal(value As Vector3F) As Single
  overload: MathStructs.PlaneF.DotNormal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.DotNormal(MathStructs.PlaneF,MathStructs.Vector3F)
  commentId: M:MathStructs.PlaneF.DotNormal(MathStructs.PlaneF,MathStructs.Vector3F)
  id: DotNormal(MathStructs.PlaneF,MathStructs.Vector3F)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: DotNormal(PlaneF, Vector3F)
  nameWithType: PlaneF.DotNormal(PlaneF, Vector3F)
  fullName: MathStructs.PlaneF.DotNormal(MathStructs.PlaneF, MathStructs.Vector3F)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: DotNormal
    path: PlaneF.cs
    startLine: 129
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public static float DotNormal(PlaneF plane, Vector3F value)
    parameters:
    - id: plane
      type: MathStructs.PlaneF
    - id: value
      type: MathStructs.Vector3F
    return:
      type: System.Single
    content.vb: Public Shared Function DotNormal(plane As PlaneF, value As Vector3F) As Single
  overload: MathStructs.PlaneF.DotNormal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.PlaneF.op_Equality(MathStructs.PlaneF,MathStructs.PlaneF)
  commentId: M:MathStructs.PlaneF.op_Equality(MathStructs.PlaneF,MathStructs.PlaneF)
  id: op_Equality(MathStructs.PlaneF,MathStructs.PlaneF)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Equality(PlaneF, PlaneF)
  nameWithType: PlaneF.Equality(PlaneF, PlaneF)
  fullName: MathStructs.PlaneF.Equality(MathStructs.PlaneF, MathStructs.PlaneF)
  type: Operator
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: op_Equality
    path: PlaneF.cs
    startLine: 133
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public static bool operator ==(PlaneF left, PlaneF right)
    parameters:
    - id: left
      type: MathStructs.PlaneF
    - id: right
      type: MathStructs.PlaneF
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As PlaneF, right As PlaneF) As Boolean
  overload: MathStructs.PlaneF.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.PlaneF.op_Inequality(MathStructs.PlaneF,MathStructs.PlaneF)
  commentId: M:MathStructs.PlaneF.op_Inequality(MathStructs.PlaneF,MathStructs.PlaneF)
  id: op_Inequality(MathStructs.PlaneF,MathStructs.PlaneF)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Inequality(PlaneF, PlaneF)
  nameWithType: PlaneF.Inequality(PlaneF, PlaneF)
  fullName: MathStructs.PlaneF.Inequality(MathStructs.PlaneF, MathStructs.PlaneF)
  type: Operator
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: op_Inequality
    path: PlaneF.cs
    startLine: 137
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public static bool operator !=(PlaneF left, PlaneF right)
    parameters:
    - id: left
      type: MathStructs.PlaneF
    - id: right
      type: MathStructs.PlaneF
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As PlaneF, right As PlaneF) As Boolean
  overload: MathStructs.PlaneF.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.PlaneF.Equals(MathStructs.PlaneF)
  commentId: M:MathStructs.PlaneF.Equals(MathStructs.PlaneF)
  id: Equals(MathStructs.PlaneF)
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Equals(PlaneF)
  nameWithType: PlaneF.Equals(PlaneF)
  fullName: MathStructs.PlaneF.Equals(MathStructs.PlaneF)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Equals
    path: PlaneF.cs
    startLine: 141
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public bool Equals(PlaneF other)
    parameters:
    - id: other
      type: MathStructs.PlaneF
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As PlaneF) As Boolean
  overload: MathStructs.PlaneF.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.PlaneF.Equals(System.Nullable{System.Object})
  commentId: M:MathStructs.PlaneF.Equals(System.Nullable{System.Object})
  id: Equals(System.Nullable{System.Object})
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: Equals(Nullable<Object>)
  nameWithType: PlaneF.Equals(Nullable<Object>)
  fullName: MathStructs.PlaneF.Equals(System.Nullable<System.Object>)
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Equals
    path: PlaneF.cs
    startLine: 145
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Nullable{System.Object}
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object?) As Boolean
  overload: MathStructs.PlaneF.Equals*
  nameWithType.vb: PlaneF.Equals(Nullable(Of Object))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: MathStructs.PlaneF.Equals(System.Nullable(Of System.Object))
  name.vb: Equals(Nullable(Of Object))
- uid: MathStructs.PlaneF.ToString
  commentId: M:MathStructs.PlaneF.ToString
  id: ToString
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PlaneF.ToString()
  fullName: MathStructs.PlaneF.ToString()
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: ToString
    path: PlaneF.cs
    startLine: 149
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: MathStructs.PlaneF.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MathStructs.PlaneF.GetHashCode
  commentId: M:MathStructs.PlaneF.GetHashCode
  id: GetHashCode
  parent: MathStructs.PlaneF
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PlaneF.GetHashCode()
  fullName: MathStructs.PlaneF.GetHashCode()
  type: Method
  source:
    remote:
      path: src/PlaneF.cs
      branch: docs
      repo: https://github.com/stefanrbk/MathStructs.git
    id: GetHashCode
    path: PlaneF.cs
    startLine: 152
  assemblies:
  - MathStructs
  namespace: MathStructs
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: MathStructs.PlaneF.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: MathStructs
  commentId: N:MathStructs
  name: MathStructs
  nameWithType: MathStructs
  fullName: MathStructs
- uid: MathStructs.Vector3F
  commentId: T:MathStructs.Vector3F
  parent: MathStructs
  name: Vector3F
  nameWithType: Vector3F
  fullName: MathStructs.Vector3F
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: MathStructs.PlaneF.#ctor*
  commentId: Overload:MathStructs.PlaneF.#ctor
  name: PlaneF
  nameWithType: PlaneF.PlaneF
  fullName: MathStructs.PlaneF.PlaneF
- uid: MathStructs.Vector4F
  commentId: T:MathStructs.Vector4F
  parent: MathStructs
  name: Vector4F
  nameWithType: Vector4F
  fullName: MathStructs.Vector4F
- uid: MathStructs.PlaneF.Deconstruct*
  commentId: Overload:MathStructs.PlaneF.Deconstruct
  name: Deconstruct
  nameWithType: PlaneF.Deconstruct
  fullName: MathStructs.PlaneF.Deconstruct
- uid: MathStructs.PlaneF.CreateFromVertices*
  commentId: Overload:MathStructs.PlaneF.CreateFromVertices
  name: CreateFromVertices
  nameWithType: PlaneF.CreateFromVertices
  fullName: MathStructs.PlaneF.CreateFromVertices
- uid: MathStructs.PlaneF
  commentId: T:MathStructs.PlaneF
  parent: MathStructs
  name: PlaneF
  nameWithType: PlaneF
  fullName: MathStructs.PlaneF
- uid: MathStructs.PlaneF.Normalize*
  commentId: Overload:MathStructs.PlaneF.Normalize
  name: Normalize
  nameWithType: PlaneF.Normalize
  fullName: MathStructs.PlaneF.Normalize
- uid: MathStructs.PlaneF.Transform*
  commentId: Overload:MathStructs.PlaneF.Transform
  name: Transform
  nameWithType: PlaneF.Transform
  fullName: MathStructs.PlaneF.Transform
- uid: MathStructs.Matrix4x4F
  commentId: T:MathStructs.Matrix4x4F
  parent: MathStructs
  name: Matrix4x4F
  nameWithType: Matrix4x4F
  fullName: MathStructs.Matrix4x4F
- uid: MathStructs.QuaternionF
  commentId: T:MathStructs.QuaternionF
  parent: MathStructs
  name: QuaternionF
  nameWithType: QuaternionF
  fullName: MathStructs.QuaternionF
- uid: MathStructs.PlaneF.Dot*
  commentId: Overload:MathStructs.PlaneF.Dot
  name: Dot
  nameWithType: PlaneF.Dot
  fullName: MathStructs.PlaneF.Dot
- uid: MathStructs.PlaneF.DotCoordinate*
  commentId: Overload:MathStructs.PlaneF.DotCoordinate
  name: DotCoordinate
  nameWithType: PlaneF.DotCoordinate
  fullName: MathStructs.PlaneF.DotCoordinate
- uid: MathStructs.PlaneF.DotNormal*
  commentId: Overload:MathStructs.PlaneF.DotNormal
  name: DotNormal
  nameWithType: PlaneF.DotNormal
  fullName: MathStructs.PlaneF.DotNormal
- uid: MathStructs.PlaneF.op_Equality*
  commentId: Overload:MathStructs.PlaneF.op_Equality
  name: Equality
  nameWithType: PlaneF.Equality
  fullName: MathStructs.PlaneF.Equality
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: MathStructs.PlaneF.op_Inequality*
  commentId: Overload:MathStructs.PlaneF.op_Inequality
  name: Inequality
  nameWithType: PlaneF.Inequality
  fullName: MathStructs.PlaneF.Inequality
- uid: MathStructs.PlaneF.Equals*
  commentId: Overload:MathStructs.PlaneF.Equals
  name: Equals
  nameWithType: PlaneF.Equals
  fullName: MathStructs.PlaneF.Equals
- uid: System.Nullable{System.Object}
  commentId: '!:System.Nullable{System.Object}'
  definition: System.Nullable`1
  name: Nullable<Object>
  nameWithType: Nullable<Object>
  fullName: System.Nullable<System.Object>
  nameWithType.vb: Nullable(Of Object)
  fullName.vb: System.Nullable(Of System.Object)
  name.vb: Nullable(Of Object)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: MathStructs.PlaneF.ToString*
  commentId: Overload:MathStructs.PlaneF.ToString
  name: ToString
  nameWithType: PlaneF.ToString
  fullName: MathStructs.PlaneF.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MathStructs.PlaneF.GetHashCode*
  commentId: Overload:MathStructs.PlaneF.GetHashCode
  name: GetHashCode
  nameWithType: PlaneF.GetHashCode
  fullName: MathStructs.PlaneF.GetHashCode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
