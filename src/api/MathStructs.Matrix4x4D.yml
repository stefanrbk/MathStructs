### YamlMime:ManagedReference
items:
- uid: MathStructs.Matrix4x4D
  commentId: T:MathStructs.Matrix4x4D
  id: Matrix4x4D
  parent: MathStructs
  children:
  - MathStructs.Matrix4x4D.#ctor(MathStructs.Matrix3x3D)
  - MathStructs.Matrix4x4D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - MathStructs.Matrix4x4D.Add(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.CreateBillboard(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.CreateConstrainedBillboard(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.CreateFromAxisAngle(MathStructs.Vector3D,System.Double)
  - MathStructs.Matrix4x4D.CreateFromQuaternion(MathStructs.QuaternionD)
  - MathStructs.Matrix4x4D.CreateFromYawPitchRoll(System.Double,System.Double,System.Double)
  - MathStructs.Matrix4x4D.CreateLookAt(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.CreateOrthographic(System.Double,System.Double,System.Double,System.Double)
  - MathStructs.Matrix4x4D.CreateOrthographicOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - MathStructs.Matrix4x4D.CreatePerspective(System.Double,System.Double,System.Double,System.Double)
  - MathStructs.Matrix4x4D.CreatePerspectiveFieldOfView(System.Double,System.Double,System.Double,System.Double)
  - MathStructs.Matrix4x4D.CreatePerspectiveOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - MathStructs.Matrix4x4D.CreateReflection(MathStructs.PlaneD)
  - MathStructs.Matrix4x4D.CreateRotationX(System.Double)
  - MathStructs.Matrix4x4D.CreateRotationX(System.Double,MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.CreateRotationY(System.Double)
  - MathStructs.Matrix4x4D.CreateRotationY(System.Double,MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.CreateRotationZ(System.Double)
  - MathStructs.Matrix4x4D.CreateRotationZ(System.Double,MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.CreateScale(MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.CreateScale(MathStructs.Vector3D,MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.CreateScale(System.Double)
  - MathStructs.Matrix4x4D.CreateScale(System.Double,MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.CreateScale(System.Double,System.Double,System.Double)
  - MathStructs.Matrix4x4D.CreateScale(System.Double,System.Double,System.Double,MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.CreateShadow(MathStructs.Vector3D,MathStructs.PlaneD)
  - MathStructs.Matrix4x4D.CreateTranslation(MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.CreateTranslation(System.Double,System.Double,System.Double)
  - MathStructs.Matrix4x4D.CreateWorld(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  - MathStructs.Matrix4x4D.Decompose(MathStructs.Matrix4x4D,MathStructs.Vector3D@,MathStructs.QuaternionD@,MathStructs.Vector3D@)
  - MathStructs.Matrix4x4D.Deconstruct(MathStructs.Vector3D@,MathStructs.QuaternionD@,MathStructs.Vector3D@)
  - MathStructs.Matrix4x4D.Equals(MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.Equals(System.Object)
  - MathStructs.Matrix4x4D.GetDeterminant
  - MathStructs.Matrix4x4D.GetHashCode
  - MathStructs.Matrix4x4D.Identity
  - MathStructs.Matrix4x4D.Invert
  - MathStructs.Matrix4x4D.Invert(MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.IsIdentity
  - MathStructs.Matrix4x4D.Lerp(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D,System.Double)
  - MathStructs.Matrix4x4D.M11
  - MathStructs.Matrix4x4D.M12
  - MathStructs.Matrix4x4D.M13
  - MathStructs.Matrix4x4D.M14
  - MathStructs.Matrix4x4D.M21
  - MathStructs.Matrix4x4D.M22
  - MathStructs.Matrix4x4D.M23
  - MathStructs.Matrix4x4D.M24
  - MathStructs.Matrix4x4D.M31
  - MathStructs.Matrix4x4D.M32
  - MathStructs.Matrix4x4D.M33
  - MathStructs.Matrix4x4D.M34
  - MathStructs.Matrix4x4D.M41
  - MathStructs.Matrix4x4D.M42
  - MathStructs.Matrix4x4D.M43
  - MathStructs.Matrix4x4D.M44
  - MathStructs.Matrix4x4D.Multiply(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.Multiply(MathStructs.Matrix4x4D,System.Double)
  - MathStructs.Matrix4x4D.NaN
  - MathStructs.Matrix4x4D.Negate(MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.op_Addition(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.op_Equality(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.op_Inequality(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.op_Multiply(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.op_Multiply(MathStructs.Matrix4x4D,System.Double)
  - MathStructs.Matrix4x4D.op_Subtraction(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.op_UnaryNegation(MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.op_UnaryPlus(MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.Subtract(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.ToString
  - MathStructs.Matrix4x4D.Transform(MathStructs.Matrix4x4D,MathStructs.QuaternionD)
  - MathStructs.Matrix4x4D.Transform(MathStructs.QuaternionD)
  - MathStructs.Matrix4x4D.Translation
  - MathStructs.Matrix4x4D.Transpose
  - MathStructs.Matrix4x4D.Transpose(MathStructs.Matrix4x4D)
  - MathStructs.Matrix4x4D.With(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  langs:
  - csharp
  - vb
  name: Matrix4x4D
  nameWithType: Matrix4x4D
  fullName: MathStructs.Matrix4x4D
  type: Struct
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Matrix4x4D
    path: Matrix4x4D.cs
    startLine: 12
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nA structure encapsulating a 4x4 matrix of <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> values.\n"
  example: []
  syntax:
    content: public struct Matrix4x4D
    content.vb: Public Structure Matrix4x4D
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: MathStructs.Matrix4x4D.M11
  commentId: F:MathStructs.Matrix4x4D.M11
  id: M11
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M11
  nameWithType: Matrix4x4D.M11
  fullName: MathStructs.Matrix4x4D.M11
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M11
    path: Matrix4x4D.cs
    startLine: 21
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 1, column 1 of the matrix.\n"
  example: []
  syntax:
    content: public double M11
    return:
      type: System.Double
    content.vb: Public M11 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M12
  commentId: F:MathStructs.Matrix4x4D.M12
  id: M12
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M12
  nameWithType: Matrix4x4D.M12
  fullName: MathStructs.Matrix4x4D.M12
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M12
    path: Matrix4x4D.cs
    startLine: 27
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 1, column 2 of the matrix.\n"
  example: []
  syntax:
    content: public double M12
    return:
      type: System.Double
    content.vb: Public M12 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M13
  commentId: F:MathStructs.Matrix4x4D.M13
  id: M13
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M13
  nameWithType: Matrix4x4D.M13
  fullName: MathStructs.Matrix4x4D.M13
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M13
    path: Matrix4x4D.cs
    startLine: 33
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 1, column 3 of the matrix.\n"
  example: []
  syntax:
    content: public double M13
    return:
      type: System.Double
    content.vb: Public M13 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M14
  commentId: F:MathStructs.Matrix4x4D.M14
  id: M14
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M14
  nameWithType: Matrix4x4D.M14
  fullName: MathStructs.Matrix4x4D.M14
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M14
    path: Matrix4x4D.cs
    startLine: 39
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 1, column 4 of the matrix.\n"
  example: []
  syntax:
    content: public double M14
    return:
      type: System.Double
    content.vb: Public M14 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M21
  commentId: F:MathStructs.Matrix4x4D.M21
  id: M21
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M21
  nameWithType: Matrix4x4D.M21
  fullName: MathStructs.Matrix4x4D.M21
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M21
    path: Matrix4x4D.cs
    startLine: 45
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 2, column 1 of the matrix.\n"
  example: []
  syntax:
    content: public double M21
    return:
      type: System.Double
    content.vb: Public M21 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M22
  commentId: F:MathStructs.Matrix4x4D.M22
  id: M22
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M22
  nameWithType: Matrix4x4D.M22
  fullName: MathStructs.Matrix4x4D.M22
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M22
    path: Matrix4x4D.cs
    startLine: 51
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 2, column 2 of the matrix.\n"
  example: []
  syntax:
    content: public double M22
    return:
      type: System.Double
    content.vb: Public M22 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M23
  commentId: F:MathStructs.Matrix4x4D.M23
  id: M23
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M23
  nameWithType: Matrix4x4D.M23
  fullName: MathStructs.Matrix4x4D.M23
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M23
    path: Matrix4x4D.cs
    startLine: 57
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 2, column 3 of the matrix.\n"
  example: []
  syntax:
    content: public double M23
    return:
      type: System.Double
    content.vb: Public M23 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M24
  commentId: F:MathStructs.Matrix4x4D.M24
  id: M24
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M24
  nameWithType: Matrix4x4D.M24
  fullName: MathStructs.Matrix4x4D.M24
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M24
    path: Matrix4x4D.cs
    startLine: 63
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 2, column 4 of the matrix.\n"
  example: []
  syntax:
    content: public double M24
    return:
      type: System.Double
    content.vb: Public M24 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M31
  commentId: F:MathStructs.Matrix4x4D.M31
  id: M31
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M31
  nameWithType: Matrix4x4D.M31
  fullName: MathStructs.Matrix4x4D.M31
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M31
    path: Matrix4x4D.cs
    startLine: 69
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 3, column 1 of the matrix.\n"
  example: []
  syntax:
    content: public double M31
    return:
      type: System.Double
    content.vb: Public M31 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M32
  commentId: F:MathStructs.Matrix4x4D.M32
  id: M32
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M32
  nameWithType: Matrix4x4D.M32
  fullName: MathStructs.Matrix4x4D.M32
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M32
    path: Matrix4x4D.cs
    startLine: 75
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 3, column 2 of the matrix.\n"
  example: []
  syntax:
    content: public double M32
    return:
      type: System.Double
    content.vb: Public M32 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M33
  commentId: F:MathStructs.Matrix4x4D.M33
  id: M33
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M33
  nameWithType: Matrix4x4D.M33
  fullName: MathStructs.Matrix4x4D.M33
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M33
    path: Matrix4x4D.cs
    startLine: 81
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 3, column 3 of the matrix.\n"
  example: []
  syntax:
    content: public double M33
    return:
      type: System.Double
    content.vb: Public M33 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M34
  commentId: F:MathStructs.Matrix4x4D.M34
  id: M34
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M34
  nameWithType: Matrix4x4D.M34
  fullName: MathStructs.Matrix4x4D.M34
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M34
    path: Matrix4x4D.cs
    startLine: 87
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 3, column 4 of the matrix.\n"
  example: []
  syntax:
    content: public double M34
    return:
      type: System.Double
    content.vb: Public M34 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M41
  commentId: F:MathStructs.Matrix4x4D.M41
  id: M41
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M41
  nameWithType: Matrix4x4D.M41
  fullName: MathStructs.Matrix4x4D.M41
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M41
    path: Matrix4x4D.cs
    startLine: 93
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 4, column 1 of the matrix.\n"
  example: []
  syntax:
    content: public double M41
    return:
      type: System.Double
    content.vb: Public M41 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M42
  commentId: F:MathStructs.Matrix4x4D.M42
  id: M42
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M42
  nameWithType: Matrix4x4D.M42
  fullName: MathStructs.Matrix4x4D.M42
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M42
    path: Matrix4x4D.cs
    startLine: 99
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 4, column 2 of the matrix.\n"
  example: []
  syntax:
    content: public double M42
    return:
      type: System.Double
    content.vb: Public M42 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M43
  commentId: F:MathStructs.Matrix4x4D.M43
  id: M43
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M43
  nameWithType: Matrix4x4D.M43
  fullName: MathStructs.Matrix4x4D.M43
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M43
    path: Matrix4x4D.cs
    startLine: 105
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 4, column 3 of the matrix.\n"
  example: []
  syntax:
    content: public double M43
    return:
      type: System.Double
    content.vb: Public M43 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.M44
  commentId: F:MathStructs.Matrix4x4D.M44
  id: M44
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: M44
  nameWithType: Matrix4x4D.M44
  fullName: MathStructs.Matrix4x4D.M44
  type: Field
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: M44
    path: Matrix4x4D.cs
    startLine: 111
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nValue at row 4, column 4 of the matrix.\n"
  example: []
  syntax:
    content: public double M44
    return:
      type: System.Double
    content.vb: Public M44 As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:MathStructs.Matrix4x4D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Matrix4x4D(Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double)
  nameWithType: Matrix4x4D.Matrix4x4D(Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double)
  fullName: MathStructs.Matrix4x4D.Matrix4x4D(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: .ctor
    path: Matrix4x4D.cs
    startLine: 131
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nConstructs a <xref href=\"MathStructs.Matrix4x4D\" data-throw-if-not-resolved=\"false\"></xref> from the given components.\n"
  example: []
  syntax:
    content: public Matrix4x4D(double m11, double m12, double m13, double m14, double m21, double m22, double m23, double m24, double m31, double m32, double m33, double m34, double m41, double m42, double m43, double m44)
    parameters:
    - id: m11
      type: System.Double
    - id: m12
      type: System.Double
    - id: m13
      type: System.Double
    - id: m14
      type: System.Double
    - id: m21
      type: System.Double
    - id: m22
      type: System.Double
    - id: m23
      type: System.Double
    - id: m24
      type: System.Double
    - id: m31
      type: System.Double
    - id: m32
      type: System.Double
    - id: m33
      type: System.Double
    - id: m34
      type: System.Double
    - id: m41
      type: System.Double
    - id: m42
      type: System.Double
    - id: m43
      type: System.Double
    - id: m44
      type: System.Double
    content.vb: Public Sub New(m11 As Double, m12 As Double, m13 As Double, m14 As Double, m21 As Double, m22 As Double, m23 As Double, m24 As Double, m31 As Double, m32 As Double, m33 As Double, m34 As Double, m41 As Double, m42 As Double, m43 As Double, m44 As Double)
  overload: MathStructs.Matrix4x4D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.#ctor(MathStructs.Matrix3x3D)
  commentId: M:MathStructs.Matrix4x4D.#ctor(MathStructs.Matrix3x3D)
  id: '#ctor(MathStructs.Matrix3x3D)'
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Matrix4x4D(Matrix3x3D)
  nameWithType: Matrix4x4D.Matrix4x4D(Matrix3x3D)
  fullName: MathStructs.Matrix4x4D.Matrix4x4D(MathStructs.Matrix3x3D)
  type: Constructor
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: .ctor
    path: Matrix4x4D.cs
    startLine: 161
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nConstructs a Matrix4x4D from the given <xref href=\"MathStructs.Matrix3x3D\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Matrix4x4D(Matrix3x3D value)
    parameters:
    - id: value
      type: MathStructs.Matrix3x3D
      description: "\nThe source <xref href=\"MathStructs.Matrix3x3D\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Sub New(value As Matrix3x3D)
  overload: MathStructs.Matrix4x4D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.Identity
  commentId: P:MathStructs.Matrix4x4D.Identity
  id: Identity
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: Matrix4x4D.Identity
  fullName: MathStructs.Matrix4x4D.Identity
  type: Property
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Identity
    path: Matrix4x4D.cs
    startLine: 189
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns the multiplicative identity matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D Identity { get; }
    parameters: []
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared ReadOnly Property Identity As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Identity*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: MathStructs.Matrix4x4D.NaN
  commentId: P:MathStructs.Matrix4x4D.NaN
  id: NaN
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: NaN
  nameWithType: Matrix4x4D.NaN
  fullName: MathStructs.Matrix4x4D.NaN
  type: Property
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: NaN
    path: Matrix4x4D.cs
    startLine: 194
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns a matrix with all values set to NaN.\n"
  example: []
  syntax:
    content: public static Matrix4x4D NaN { get; }
    parameters: []
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared ReadOnly Property NaN As Matrix4x4D
  overload: MathStructs.Matrix4x4D.NaN*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: MathStructs.Matrix4x4D.IsIdentity
  commentId: P:MathStructs.Matrix4x4D.IsIdentity
  id: IsIdentity
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: IsIdentity
  nameWithType: Matrix4x4D.IsIdentity
  fullName: MathStructs.Matrix4x4D.IsIdentity
  type: Property
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: IsIdentity
    path: Matrix4x4D.cs
    startLine: 199
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns whether the matrix is the identity matrix.\n"
  example: []
  syntax:
    content: public bool IsIdentity { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsIdentity As Boolean
  overload: MathStructs.Matrix4x4D.IsIdentity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MathStructs.Matrix4x4D.Translation
  commentId: P:MathStructs.Matrix4x4D.Translation
  id: Translation
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Translation
  nameWithType: Matrix4x4D.Translation
  fullName: MathStructs.Matrix4x4D.Translation
  type: Property
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Translation
    path: Matrix4x4D.cs
    startLine: 205
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nGets or sets the translation component of this matrix.\n"
  example: []
  syntax:
    content: public Vector3D Translation { get; set; }
    parameters: []
    return:
      type: MathStructs.Vector3D
    content.vb: Public Property Translation As Vector3D
  overload: MathStructs.Matrix4x4D.Translation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.Add(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.Add(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  id: Add(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Add(Matrix4x4D, Matrix4x4D)
  nameWithType: Matrix4x4D.Add(Matrix4x4D, Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Add(MathStructs.Matrix4x4D, MathStructs.Matrix4x4D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Add
    path: Matrix4x4D.cs
    startLine: 224
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nAdds two matrices together.\n"
  example: []
  syntax:
    content: public static Matrix4x4D Add(Matrix4x4D left, Matrix4x4D right)
    parameters:
    - id: left
      type: MathStructs.Matrix4x4D
      description: "\nThe first source matrix.\n"
    - id: right
      type: MathStructs.Matrix4x4D
      description: "\nThe second source matrix.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function Add(left As Matrix4x4D, right As Matrix4x4D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateBillboard(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateBillboard(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  id: CreateBillboard(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateBillboard(Vector3D, Vector3D, Vector3D, Vector3D)
  nameWithType: Matrix4x4D.CreateBillboard(Vector3D, Vector3D, Vector3D, Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateBillboard(MathStructs.Vector3D, MathStructs.Vector3D, MathStructs.Vector3D, MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateBillboard
    path: Matrix4x4D.cs
    startLine: 243
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a spherical billboard that rotates around a specified object position.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateBillboard(Vector3D objectPosition, Vector3D cameraPosition, Vector3D cameraUpVector, Vector3D cameraForwardVector)
    parameters:
    - id: objectPosition
      type: MathStructs.Vector3D
      description: "\nPosition of the object the billboard will rotate around.\n"
    - id: cameraPosition
      type: MathStructs.Vector3D
      description: "\nPosition of the camera.\n"
    - id: cameraUpVector
      type: MathStructs.Vector3D
      description: "\nThe up vector of the camera.\n"
    - id: cameraForwardVector
      type: MathStructs.Vector3D
      description: "\nThe forward vector of the camera.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateBillboard(objectPosition As Vector3D, cameraPosition As Vector3D, cameraUpVector As Vector3D, cameraForwardVector As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateBillboard*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateConstrainedBillboard(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateConstrainedBillboard(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  id: CreateConstrainedBillboard(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateConstrainedBillboard(Vector3D, Vector3D, Vector3D, Vector3D, Vector3D)
  nameWithType: Matrix4x4D.CreateConstrainedBillboard(Vector3D, Vector3D, Vector3D, Vector3D, Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateConstrainedBillboard(MathStructs.Vector3D, MathStructs.Vector3D, MathStructs.Vector3D, MathStructs.Vector3D, MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateConstrainedBillboard
    path: Matrix4x4D.cs
    startLine: 282
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a cylindrical billboard that rotates around a specified axis.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateConstrainedBillboard(Vector3D objectPosition, Vector3D cameraPosition, Vector3D rotateAxis, Vector3D cameraForwardVector, Vector3D objectForwardVector)
    parameters:
    - id: objectPosition
      type: MathStructs.Vector3D
      description: "\nPosition of the object the billboard will rotate around.\n"
    - id: cameraPosition
      type: MathStructs.Vector3D
      description: "\nPosition of the camera.\n"
    - id: rotateAxis
      type: MathStructs.Vector3D
      description: "\nAxis to rotate the billboard around.\n"
    - id: cameraForwardVector
      type: MathStructs.Vector3D
      description: "\nForward vector of the camera.\n"
    - id: objectForwardVector
      type: MathStructs.Vector3D
      description: "\nForward vector of the object.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateConstrainedBillboard(objectPosition As Vector3D, cameraPosition As Vector3D, rotateAxis As Vector3D, cameraForwardVector As Vector3D, objectForwardVector As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateConstrainedBillboard*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateFromAxisAngle(MathStructs.Vector3D,System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreateFromAxisAngle(MathStructs.Vector3D,System.Double)
  id: CreateFromAxisAngle(MathStructs.Vector3D,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateFromAxisAngle(Vector3D, Double)
  nameWithType: Matrix4x4D.CreateFromAxisAngle(Vector3D, Double)
  fullName: MathStructs.Matrix4x4D.CreateFromAxisAngle(MathStructs.Vector3D, System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateFromAxisAngle
    path: Matrix4x4D.cs
    startLine: 326
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a matrix that rotates around an arbitrary vector.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateFromAxisAngle(Vector3D axis, double angle)
    parameters:
    - id: axis
      type: MathStructs.Vector3D
      description: "\nThe axis to rotate around.\n"
    - id: angle
      type: System.Double
      description: "\nThe angle to rotate around the given axis, in radians.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateFromAxisAngle(axis As Vector3D, angle As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateFromAxisAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateFromQuaternion(MathStructs.QuaternionD)
  commentId: M:MathStructs.Matrix4x4D.CreateFromQuaternion(MathStructs.QuaternionD)
  id: CreateFromQuaternion(MathStructs.QuaternionD)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateFromQuaternion(QuaternionD)
  nameWithType: Matrix4x4D.CreateFromQuaternion(QuaternionD)
  fullName: MathStructs.Matrix4x4D.CreateFromQuaternion(MathStructs.QuaternionD)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateFromQuaternion
    path: Matrix4x4D.cs
    startLine: 378
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a rotation matrix from the given <xref href=\"MathStructs.QuaternionD\" data-throw-if-not-resolved=\"false\"></xref> rotation value.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateFromQuaternion(QuaternionD q)
    parameters:
    - id: q
      type: MathStructs.QuaternionD
      description: "\nThe source <xref href=\"MathStructs.QuaternionD\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateFromQuaternion(q As QuaternionD) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateFromQuaternion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateFromYawPitchRoll(System.Double,System.Double,System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreateFromYawPitchRoll(System.Double,System.Double,System.Double)
  id: CreateFromYawPitchRoll(System.Double,System.Double,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateFromYawPitchRoll(Double, Double, Double)
  nameWithType: Matrix4x4D.CreateFromYawPitchRoll(Double, Double, Double)
  fullName: MathStructs.Matrix4x4D.CreateFromYawPitchRoll(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateFromYawPitchRoll
    path: Matrix4x4D.cs
    startLine: 413
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a rotation matrix from the specified yaw, pitch, and roll.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateFromYawPitchRoll(double yaw, double pitch, double roll)
    parameters:
    - id: yaw
      type: System.Double
      description: "\nAngle of rotation, in radians, around the Y-axis.\n"
    - id: pitch
      type: System.Double
      description: "\nAngle of rotation, in radians, around the X-axis.\n"
    - id: roll
      type: System.Double
      description: "\nAngle of rotation, in radians, around the Z-axis.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateFromYawPitchRoll(yaw As Double, pitch As Double, roll As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateFromYawPitchRoll*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateLookAt(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateLookAt(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  id: CreateLookAt(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateLookAt(Vector3D, Vector3D, Vector3D)
  nameWithType: Matrix4x4D.CreateLookAt(Vector3D, Vector3D, Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateLookAt(MathStructs.Vector3D, MathStructs.Vector3D, MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateLookAt
    path: Matrix4x4D.cs
    startLine: 426
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a view matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateLookAt(Vector3D cameraPosition, Vector3D cameraTarget, Vector3D cameraUpVector)
    parameters:
    - id: cameraPosition
      type: MathStructs.Vector3D
      description: "\nThe position of the camera.\n"
    - id: cameraTarget
      type: MathStructs.Vector3D
      description: "\nThe target towards which the camera is pointing.\n"
    - id: cameraUpVector
      type: MathStructs.Vector3D
      description: ''
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateLookAt(cameraPosition As Vector3D, cameraTarget As Vector3D, cameraUpVector As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateLookAt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateOrthographic(System.Double,System.Double,System.Double,System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreateOrthographic(System.Double,System.Double,System.Double,System.Double)
  id: CreateOrthographic(System.Double,System.Double,System.Double,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateOrthographic(Double, Double, Double, Double)
  nameWithType: Matrix4x4D.CreateOrthographic(Double, Double, Double, Double)
  fullName: MathStructs.Matrix4x4D.CreateOrthographic(System.Double, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateOrthographic
    path: Matrix4x4D.cs
    startLine: 461
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates an orthographic perspective matrix from the given view volume dimensions.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateOrthographic(double width, double height, double zNearPlane, double zFarPlane)
    parameters:
    - id: width
      type: System.Double
      description: "\nWidth of the view volume.\n"
    - id: height
      type: System.Double
      description: "\nHeight of the view volume.\n"
    - id: zNearPlane
      type: System.Double
      description: "\nMinimum Z-value of the view volume.\n"
    - id: zFarPlane
      type: System.Double
      description: "\nMaximum Z-value of the view volume.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateOrthographic(width As Double, height As Double, zNearPlane As Double, zFarPlane As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateOrthographic*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateOrthographicOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreateOrthographicOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: CreateOrthographicOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateOrthographicOffCenter(Double, Double, Double, Double, Double, Double)
  nameWithType: Matrix4x4D.CreateOrthographicOffCenter(Double, Double, Double, Double, Double, Double)
  fullName: MathStructs.Matrix4x4D.CreateOrthographicOffCenter(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateOrthographicOffCenter
    path: Matrix4x4D.cs
    startLine: 488
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nBuilds a customized, orthographic projection matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateOrthographicOffCenter(double left, double right, double bottom, double top, double zNearPlane, double zFarPlane)
    parameters:
    - id: left
      type: System.Double
      description: "\nMinimum X-value of the view volume.\n"
    - id: right
      type: System.Double
      description: "\nMaximum X-value of the view volume.\n"
    - id: bottom
      type: System.Double
      description: "\nMinimum Y-value of the view volume.\n"
    - id: top
      type: System.Double
      description: "\nMaximum Y-value of the view volume.\n"
    - id: zNearPlane
      type: System.Double
      description: "\nMinimum Z-value of the view volume.\n"
    - id: zFarPlane
      type: System.Double
      description: "\nMaximum Z-value of the view volume.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateOrthographicOffCenter(left As Double, right As Double, bottom As Double, top As Double, zNearPlane As Double, zFarPlane As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateOrthographicOffCenter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreatePerspective(System.Double,System.Double,System.Double,System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreatePerspective(System.Double,System.Double,System.Double,System.Double)
  id: CreatePerspective(System.Double,System.Double,System.Double,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreatePerspective(Double, Double, Double, Double)
  nameWithType: Matrix4x4D.CreatePerspective(Double, Double, Double, Double)
  fullName: MathStructs.Matrix4x4D.CreatePerspective(System.Double, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreatePerspective
    path: Matrix4x4D.cs
    startLine: 511
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreate a perspective projection matrix from the given view volume dimension.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreatePerspective(double width, double height, double nearPlaneDistance, double farPlaneDistance)
    parameters:
    - id: width
      type: System.Double
      description: "\nWidth of the view volume at the near view plane.\n"
    - id: height
      type: System.Double
      description: "\nHeight of the view volume at the near view plane.\n"
    - id: nearPlaneDistance
      type: System.Double
      description: "\nDistance to the near view plane.\n"
    - id: farPlaneDistance
      type: System.Double
      description: "\nDistance to the far view plane.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreatePerspective(width As Double, height As Double, nearPlaneDistance As Double, farPlaneDistance As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreatePerspective*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreatePerspectiveFieldOfView(System.Double,System.Double,System.Double,System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreatePerspectiveFieldOfView(System.Double,System.Double,System.Double,System.Double)
  id: CreatePerspectiveFieldOfView(System.Double,System.Double,System.Double,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreatePerspectiveFieldOfView(Double, Double, Double, Double)
  nameWithType: Matrix4x4D.CreatePerspectiveFieldOfView(Double, Double, Double, Double)
  fullName: MathStructs.Matrix4x4D.CreatePerspectiveFieldOfView(System.Double, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreatePerspectiveFieldOfView
    path: Matrix4x4D.cs
    startLine: 543
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a perspective projection matrix based on a field of view, aspect ratio, and near and far view plane distances.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreatePerspectiveFieldOfView(double fieldOfView, double aspectRatio, double nearPlaneDistance, double farPlaneDistance)
    parameters:
    - id: fieldOfView
      type: System.Double
      description: "\nField of view in the y direction, in radians.\n"
    - id: aspectRatio
      type: System.Double
      description: "\nAspect ratio, defined as view space width divided by height.\n"
    - id: nearPlaneDistance
      type: System.Double
      description: "\nDistance to the near view plane.\n"
    - id: farPlaneDistance
      type: System.Double
      description: "\nDistance to the far view plane.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreatePerspectiveFieldOfView(fieldOfView As Double, aspectRatio As Double, nearPlaneDistance As Double, farPlaneDistance As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreatePerspectiveFieldOfView*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreatePerspectiveOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreatePerspectiveOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: CreatePerspectiveOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreatePerspectiveOffCenter(Double, Double, Double, Double, Double, Double)
  nameWithType: Matrix4x4D.CreatePerspectiveOffCenter(Double, Double, Double, Double, Double, Double)
  fullName: MathStructs.Matrix4x4D.CreatePerspectiveOffCenter(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreatePerspectiveOffCenter
    path: Matrix4x4D.cs
    startLine: 586
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a customized, perspective projection matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreatePerspectiveOffCenter(double left, double right, double bottom, double top, double nearPlaneDistance, double farPlaneDistance)
    parameters:
    - id: left
      type: System.Double
      description: "\nMinimum x-value of the view volume at the near view plane.\n"
    - id: right
      type: System.Double
      description: "\nMaximum x-value of the view volume at the near view plane.\n"
    - id: bottom
      type: System.Double
      description: "\nMinimum y-value of the view volume at the near view plane.\n"
    - id: top
      type: System.Double
      description: "\nMaximum y-value of the view volume at the near view plane.\n"
    - id: nearPlaneDistance
      type: System.Double
      description: "\nDistance to the near view plane.\n"
    - id: farPlaneDistance
      type: System.Double
      description: "\nDistance to the far view plane.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreatePerspectiveOffCenter(left As Double, right As Double, bottom As Double, top As Double, nearPlaneDistance As Double, farPlaneDistance As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreatePerspectiveOffCenter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateReflection(MathStructs.PlaneD)
  commentId: M:MathStructs.Matrix4x4D.CreateReflection(MathStructs.PlaneD)
  id: CreateReflection(MathStructs.PlaneD)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateReflection(PlaneD)
  nameWithType: Matrix4x4D.CreateReflection(PlaneD)
  fullName: MathStructs.Matrix4x4D.CreateReflection(MathStructs.PlaneD)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateReflection
    path: Matrix4x4D.cs
    startLine: 612
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a Matrix that reflects the coordinate system about a specified Plane.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateReflection(PlaneD value)
    parameters:
    - id: value
      type: MathStructs.PlaneD
      description: "\nThe Plane about which to create a reflection.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateReflection(value As PlaneD) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateReflection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateRotationX(System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreateRotationX(System.Double)
  id: CreateRotationX(System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateRotationX(Double)
  nameWithType: Matrix4x4D.CreateRotationX(Double)
  fullName: MathStructs.Matrix4x4D.CreateRotationX(System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateRotationX
    path: Matrix4x4D.cs
    startLine: 637
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a matrix for rotating points around the X-axis.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateRotationX(double radians)
    parameters:
    - id: radians
      type: System.Double
      description: "\nThe amount, in radians, by which to rotate around the X-axis.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateRotationX(radians As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateRotationX*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateRotationX(System.Double,MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateRotationX(System.Double,MathStructs.Vector3D)
  id: CreateRotationX(System.Double,MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateRotationX(Double, Vector3D)
  nameWithType: Matrix4x4D.CreateRotationX(Double, Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateRotationX(System.Double, MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateRotationX
    path: Matrix4x4D.cs
    startLine: 659
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a matrix for rotating points around the X-axis, from a center point.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateRotationX(double radians, Vector3D centerPoint)
    parameters:
    - id: radians
      type: System.Double
      description: "\nThe amount, in radians, by which to rotate around the X-axis.\n"
    - id: centerPoint
      type: MathStructs.Vector3D
      description: "\nThe center point.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateRotationX(radians As Double, centerPoint As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateRotationX*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateRotationY(System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreateRotationY(System.Double)
  id: CreateRotationY(System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateRotationY(Double)
  nameWithType: Matrix4x4D.CreateRotationY(Double)
  fullName: MathStructs.Matrix4x4D.CreateRotationY(System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateRotationY
    path: Matrix4x4D.cs
    startLine: 680
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a matrix for rotating points around the Y-axis.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateRotationY(double radians)
    parameters:
    - id: radians
      type: System.Double
      description: "\nThe amount, in radians, by which to rotate around the Y-axis.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateRotationY(radians As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateRotationY*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateRotationY(System.Double,MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateRotationY(System.Double,MathStructs.Vector3D)
  id: CreateRotationY(System.Double,MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateRotationY(Double, Vector3D)
  nameWithType: Matrix4x4D.CreateRotationY(Double, Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateRotationY(System.Double, MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateRotationY
    path: Matrix4x4D.cs
    startLine: 702
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a matrix for rotating points around the Y-axis, from a center point.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateRotationY(double radians, Vector3D centerPoint)
    parameters:
    - id: radians
      type: System.Double
      description: "\nThe amount, in radians, by which to rotate around the Y-axis.\n"
    - id: centerPoint
      type: MathStructs.Vector3D
      description: "\nThe center point.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateRotationY(radians As Double, centerPoint As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateRotationY*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateRotationZ(System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreateRotationZ(System.Double)
  id: CreateRotationZ(System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateRotationZ(Double)
  nameWithType: Matrix4x4D.CreateRotationZ(Double)
  fullName: MathStructs.Matrix4x4D.CreateRotationZ(System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateRotationZ
    path: Matrix4x4D.cs
    startLine: 723
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a matrix for rotating points around the Z-axis.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateRotationZ(double radians)
    parameters:
    - id: radians
      type: System.Double
      description: "\nThe amount, in radians, by which to rotate around the Z-axis.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateRotationZ(radians As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateRotationZ*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateRotationZ(System.Double,MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateRotationZ(System.Double,MathStructs.Vector3D)
  id: CreateRotationZ(System.Double,MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateRotationZ(Double, Vector3D)
  nameWithType: Matrix4x4D.CreateRotationZ(Double, Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateRotationZ(System.Double, MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateRotationZ
    path: Matrix4x4D.cs
    startLine: 745
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a matrix for rotating points around the Z-axis, from a center point.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateRotationZ(double radians, Vector3D centerPoint)
    parameters:
    - id: radians
      type: System.Double
      description: "\nThe amount, in radians, by which to rotate around the Z-axis.\n"
    - id: centerPoint
      type: MathStructs.Vector3D
      description: "\nThe center point.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateRotationZ(radians As Double, centerPoint As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateRotationZ*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateScale(System.Double,System.Double,System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreateScale(System.Double,System.Double,System.Double)
  id: CreateScale(System.Double,System.Double,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateScale(Double, Double, Double)
  nameWithType: Matrix4x4D.CreateScale(Double, Double, Double)
  fullName: MathStructs.Matrix4x4D.CreateScale(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateScale
    path: Matrix4x4D.cs
    startLine: 772
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a scaling matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateScale(double xScale, double yScale, double zScale)
    parameters:
    - id: xScale
      type: System.Double
      description: "\nValue to scale by on the X-axis.\n"
    - id: yScale
      type: System.Double
      description: "\nValue to scale by on the Y-axis.\n"
    - id: zScale
      type: System.Double
      description: "\nValue to scale by on the Z-axis.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateScale(xScale As Double, yScale As Double, zScale As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateScale(System.Double,System.Double,System.Double,MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateScale(System.Double,System.Double,System.Double,MathStructs.Vector3D)
  id: CreateScale(System.Double,System.Double,System.Double,MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateScale(Double, Double, Double, Vector3D)
  nameWithType: Matrix4x4D.CreateScale(Double, Double, Double, Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateScale(System.Double, System.Double, System.Double, MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateScale
    path: Matrix4x4D.cs
    startLine: 790
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a scaling matrix with a center point.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateScale(double xScale, double yScale, double zScale, Vector3D centerPoint)
    parameters:
    - id: xScale
      type: System.Double
      description: "\nValue to scale by on the X-axis.\n"
    - id: yScale
      type: System.Double
      description: "\nValue to scale by on the Y-axis.\n"
    - id: zScale
      type: System.Double
      description: "\nValue to scale by on the Z-axis.\n"
    - id: centerPoint
      type: MathStructs.Vector3D
      description: "\nThe center point.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateScale(xScale As Double, yScale As Double, zScale As Double, centerPoint As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateScale(MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateScale(MathStructs.Vector3D)
  id: CreateScale(MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateScale(Vector3D)
  nameWithType: Matrix4x4D.CreateScale(Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateScale(MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateScale
    path: Matrix4x4D.cs
    startLine: 804
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a scaling matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateScale(Vector3D scale)
    parameters:
    - id: scale
      type: MathStructs.Vector3D
      description: "\nThe vector containing the amount to scale by on each axis.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateScale(scale As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateScale(MathStructs.Vector3D,MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateScale(MathStructs.Vector3D,MathStructs.Vector3D)
  id: CreateScale(MathStructs.Vector3D,MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateScale(Vector3D, Vector3D)
  nameWithType: Matrix4x4D.CreateScale(Vector3D, Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateScale(MathStructs.Vector3D, MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateScale
    path: Matrix4x4D.cs
    startLine: 814
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a scaling matrix with a center point.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateScale(Vector3D scale, Vector3D centerPoint)
    parameters:
    - id: scale
      type: MathStructs.Vector3D
      description: The vector containing the amount to scale by on each axis.
    - id: centerPoint
      type: MathStructs.Vector3D
      description: "\nThe center point.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateScale(scale As Vector3D, centerPoint As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateScale(System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreateScale(System.Double)
  id: CreateScale(System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateScale(Double)
  nameWithType: Matrix4x4D.CreateScale(Double)
  fullName: MathStructs.Matrix4x4D.CreateScale(System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateScale
    path: Matrix4x4D.cs
    startLine: 823
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a uniform scaling matrix that scales equally on each axis.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateScale(double scale)
    parameters:
    - id: scale
      type: System.Double
      description: "\nThe uniform scaling factor.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateScale(scale As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateScale(System.Double,MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateScale(System.Double,MathStructs.Vector3D)
  id: CreateScale(System.Double,MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateScale(Double, Vector3D)
  nameWithType: Matrix4x4D.CreateScale(Double, Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateScale(System.Double, MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateScale
    path: Matrix4x4D.cs
    startLine: 835
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a uniform scaling matrix that scales equally on each axis with a center point.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateScale(double scale, Vector3D centerPoint)
    parameters:
    - id: scale
      type: System.Double
      description: "\nThe uniform scaling factor.\n"
    - id: centerPoint
      type: MathStructs.Vector3D
      description: "\nThe center point.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateScale(scale As Double, centerPoint As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateShadow(MathStructs.Vector3D,MathStructs.PlaneD)
  commentId: M:MathStructs.Matrix4x4D.CreateShadow(MathStructs.Vector3D,MathStructs.PlaneD)
  id: CreateShadow(MathStructs.Vector3D,MathStructs.PlaneD)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateShadow(Vector3D, PlaneD)
  nameWithType: Matrix4x4D.CreateShadow(Vector3D, PlaneD)
  fullName: MathStructs.Matrix4x4D.CreateShadow(MathStructs.Vector3D, MathStructs.PlaneD)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateShadow
    path: Matrix4x4D.cs
    startLine: 847
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a Matrix that flattens geometry into a specified Plan as if casting a shadow from a specified light source.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateShadow(Vector3D lightDirection, PlaneD plane)
    parameters:
    - id: lightDirection
      type: MathStructs.Vector3D
      description: "\nThe direction from which the light that will cast the shadow is coming.\n"
    - id: plane
      type: MathStructs.PlaneD
      description: "\nThe Plane onto which the new matrix should flatten geometry so as to cast a shadow.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateShadow(lightDirection As Vector3D, plane As PlaneD) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateShadow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateTranslation(MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateTranslation(MathStructs.Vector3D)
  id: CreateTranslation(MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateTranslation(Vector3D)
  nameWithType: Matrix4x4D.CreateTranslation(Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateTranslation(MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateTranslation
    path: Matrix4x4D.cs
    startLine: 873
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a translation matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateTranslation(Vector3D position)
    parameters:
    - id: position
      type: MathStructs.Vector3D
      description: "\nThe amount to translate in each axis.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateTranslation(position As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateTranslation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateTranslation(System.Double,System.Double,System.Double)
  commentId: M:MathStructs.Matrix4x4D.CreateTranslation(System.Double,System.Double,System.Double)
  id: CreateTranslation(System.Double,System.Double,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateTranslation(Double, Double, Double)
  nameWithType: Matrix4x4D.CreateTranslation(Double, Double, Double)
  fullName: MathStructs.Matrix4x4D.CreateTranslation(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateTranslation
    path: Matrix4x4D.cs
    startLine: 888
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a translation matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateTranslation(double xPosition, double yPosition, double zPosition)
    parameters:
    - id: xPosition
      type: System.Double
      description: "\nThe amount to translate on the X-axis.\n"
    - id: yPosition
      type: System.Double
      description: "\nThe amount to translate on the Y-axis.\n"
    - id: zPosition
      type: System.Double
      description: "\nThe amount to translate on the Z-axis.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateTranslation(xPosition As Double, yPosition As Double, zPosition As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateTranslation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.CreateWorld(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  commentId: M:MathStructs.Matrix4x4D.CreateWorld(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  id: CreateWorld(MathStructs.Vector3D,MathStructs.Vector3D,MathStructs.Vector3D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: CreateWorld(Vector3D, Vector3D, Vector3D)
  nameWithType: Matrix4x4D.CreateWorld(Vector3D, Vector3D, Vector3D)
  fullName: MathStructs.Matrix4x4D.CreateWorld(MathStructs.Vector3D, MathStructs.Vector3D, MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: CreateWorld
    path: Matrix4x4D.cs
    startLine: 903
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCreates a world matrix with the specified parameters.\n"
  example: []
  syntax:
    content: public static Matrix4x4D CreateWorld(Vector3D position, Vector3D forward, Vector3D up)
    parameters:
    - id: position
      type: MathStructs.Vector3D
      description: "\nThe position of the object; used in translation operations.\n"
    - id: forward
      type: MathStructs.Vector3D
      description: "\nForward direction of the object.\n"
    - id: up
      type: MathStructs.Vector3D
      description: "\nUpward direction of the object; usually &lt; 0 1 0 >\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function CreateWorld(position As Vector3D, forward As Vector3D, up As Vector3D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.CreateWorld*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.Decompose(MathStructs.Matrix4x4D,MathStructs.Vector3D@,MathStructs.QuaternionD@,MathStructs.Vector3D@)
  commentId: M:MathStructs.Matrix4x4D.Decompose(MathStructs.Matrix4x4D,MathStructs.Vector3D@,MathStructs.QuaternionD@,MathStructs.Vector3D@)
  id: Decompose(MathStructs.Matrix4x4D,MathStructs.Vector3D@,MathStructs.QuaternionD@,MathStructs.Vector3D@)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Decompose(Matrix4x4D, out Vector3D, out QuaternionD, out Vector3D)
  nameWithType: Matrix4x4D.Decompose(Matrix4x4D, out Vector3D, out QuaternionD, out Vector3D)
  fullName: MathStructs.Matrix4x4D.Decompose(MathStructs.Matrix4x4D, out MathStructs.Vector3D, out MathStructs.QuaternionD, out MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Decompose
    path: Matrix4x4D.cs
    startLine: 938
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nAttempts to extract the scale, translation, and rotation components from the given scale/rotation/translation matrix.\n"
  example: []
  syntax:
    content: public static bool Decompose(Matrix4x4D matrix, out Vector3D scale, out QuaternionD rotation, out Vector3D translation)
    parameters:
    - id: matrix
      type: MathStructs.Matrix4x4D
      description: "\nThe source matrix.\n"
    - id: scale
      type: MathStructs.Vector3D
      description: "\nThe scaling component of the transformation matrix.\n"
    - id: rotation
      type: MathStructs.QuaternionD
      description: "\nThe rotation component of the transformation matrix.\n"
    - id: translation
      type: MathStructs.Vector3D
      description: "\nThe translation component of the transformation matrix.\n"
    return:
      type: System.Boolean
      description: "\nTrue if the source matrix was successfully decomposed; False otherwise.\n"
    content.vb: Public Shared Function Decompose(matrix As Matrix4x4D, ByRef scale As Vector3D, ByRef rotation As QuaternionD, ByRef translation As Vector3D) As Boolean
  overload: MathStructs.Matrix4x4D.Decompose*
  nameWithType.vb: Matrix4x4D.Decompose(Matrix4x4D, ByRef Vector3D, ByRef QuaternionD, ByRef Vector3D)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MathStructs.Matrix4x4D.Decompose(MathStructs.Matrix4x4D, ByRef MathStructs.Vector3D, ByRef MathStructs.QuaternionD, ByRef MathStructs.Vector3D)
  name.vb: Decompose(Matrix4x4D, ByRef Vector3D, ByRef QuaternionD, ByRef Vector3D)
- uid: MathStructs.Matrix4x4D.Invert(MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.Invert(MathStructs.Matrix4x4D)
  id: Invert(MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Invert(Matrix4x4D)
  nameWithType: Matrix4x4D.Invert(Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Invert(MathStructs.Matrix4x4D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Invert
    path: Matrix4x4D.cs
    startLine: 954
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nAttempts to calculate the inverse of the given matrix. If successful, the result will contain the inverted matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D Invert(Matrix4x4D matrix)
    parameters:
    - id: matrix
      type: MathStructs.Matrix4x4D
      description: "\nThe source matrix to invert.\n"
    return:
      type: MathStructs.Matrix4x4D
      description: "\nIf successful, the inverted matrix; NaN matrix otherwise.\n"
    content.vb: Public Shared Function Invert(matrix As Matrix4x4D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Invert*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.Lerp(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D,System.Double)
  commentId: M:MathStructs.Matrix4x4D.Lerp(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D,System.Double)
  id: Lerp(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Lerp(Matrix4x4D, Matrix4x4D, Double)
  nameWithType: Matrix4x4D.Lerp(Matrix4x4D, Matrix4x4D, Double)
  fullName: MathStructs.Matrix4x4D.Lerp(MathStructs.Matrix4x4D, MathStructs.Matrix4x4D, System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Lerp
    path: Matrix4x4D.cs
    startLine: 1117
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nLinearly interpolates between the corresponding values of two matrices.\n"
  example: []
  syntax:
    content: public static Matrix4x4D Lerp(Matrix4x4D matrix1, Matrix4x4D matrix2, double amount)
    parameters:
    - id: matrix1
      type: MathStructs.Matrix4x4D
      description: "\nThe first source matrix.\n"
    - id: matrix2
      type: MathStructs.Matrix4x4D
      description: "\nThe second source matrix.\n"
    - id: amount
      type: System.Double
      description: "\nThe relative weight of the second source matrix.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function Lerp(matrix1 As Matrix4x4D, matrix2 As Matrix4x4D, amount As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.Multiply(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.Multiply(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  id: Multiply(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Multiply(Matrix4x4D, Matrix4x4D)
  nameWithType: Matrix4x4D.Multiply(Matrix4x4D, Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Multiply(MathStructs.Matrix4x4D, MathStructs.Matrix4x4D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Multiply
    path: Matrix4x4D.cs
    startLine: 1160
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nMultiplies a matrix by another matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D Multiply(Matrix4x4D left, Matrix4x4D right)
    parameters:
    - id: left
      type: MathStructs.Matrix4x4D
      description: "\nThe first source matrix.\n"
    - id: right
      type: MathStructs.Matrix4x4D
      description: "\nThe second source matrix.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function Multiply(left As Matrix4x4D, right As Matrix4x4D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.Multiply(MathStructs.Matrix4x4D,System.Double)
  commentId: M:MathStructs.Matrix4x4D.Multiply(MathStructs.Matrix4x4D,System.Double)
  id: Multiply(MathStructs.Matrix4x4D,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Multiply(Matrix4x4D, Double)
  nameWithType: Matrix4x4D.Multiply(Matrix4x4D, Double)
  fullName: MathStructs.Matrix4x4D.Multiply(MathStructs.Matrix4x4D, System.Double)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Multiply
    path: Matrix4x4D.cs
    startLine: 1173
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nMultiplies a matrix by a scalar value.\n"
  example: []
  syntax:
    content: public static Matrix4x4D Multiply(Matrix4x4D left, double right)
    parameters:
    - id: left
      type: MathStructs.Matrix4x4D
      description: "\nThe source matrix.\n"
    - id: right
      type: System.Double
      description: "\nThe scaling factor.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function Multiply(left As Matrix4x4D, right As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.Negate(MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.Negate(MathStructs.Matrix4x4D)
  id: Negate(MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Negate(Matrix4x4D)
  nameWithType: Matrix4x4D.Negate(Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Negate(MathStructs.Matrix4x4D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Negate
    path: Matrix4x4D.cs
    startLine: 1183
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns a new matrix with the negated elements of the given matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D Negate(Matrix4x4D value)
    parameters:
    - id: value
      type: MathStructs.Matrix4x4D
      description: "\nThe source matrix.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function Negate(value As Matrix4x4D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Negate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.op_UnaryNegation(MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.op_UnaryNegation(MathStructs.Matrix4x4D)
  id: op_UnaryNegation(MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: UnaryNegation(Matrix4x4D)
  nameWithType: Matrix4x4D.UnaryNegation(Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.UnaryNegation(MathStructs.Matrix4x4D)
  type: Operator
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: op_UnaryNegation
    path: Matrix4x4D.cs
    startLine: 1193
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns a new matrix with the negated elements of the given matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D operator -(Matrix4x4D value)
    parameters:
    - id: value
      type: MathStructs.Matrix4x4D
      description: "\nThe source matrix.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Operator -(value As Matrix4x4D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.op_Subtraction(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.op_Subtraction(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  id: op_Subtraction(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Subtraction(Matrix4x4D, Matrix4x4D)
  nameWithType: Matrix4x4D.Subtraction(Matrix4x4D, Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Subtraction(MathStructs.Matrix4x4D, MathStructs.Matrix4x4D)
  type: Operator
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: op_Subtraction
    path: Matrix4x4D.cs
    startLine: 1236
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nSubtracts the second matrix from the first.\n"
  example: []
  syntax:
    content: public static Matrix4x4D operator -(Matrix4x4D left, Matrix4x4D right)
    parameters:
    - id: left
      type: MathStructs.Matrix4x4D
      description: "\nThe first source matrix.\n"
    - id: right
      type: MathStructs.Matrix4x4D
      description: "\nThe second source matrix.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Operator -(left As Matrix4x4D, right As Matrix4x4D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.op_Inequality(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.op_Inequality(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  id: op_Inequality(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Inequality(Matrix4x4D, Matrix4x4D)
  nameWithType: Matrix4x4D.Inequality(Matrix4x4D, Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Inequality(MathStructs.Matrix4x4D, MathStructs.Matrix4x4D)
  type: Operator
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: op_Inequality
    path: Matrix4x4D.cs
    startLine: 1294
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns a boolean indicating whether the given two matrices are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(Matrix4x4D value1, Matrix4x4D value2)
    parameters:
    - id: value1
      type: MathStructs.Matrix4x4D
      description: "\nThe first matrix to compare.\n"
    - id: value2
      type: MathStructs.Matrix4x4D
      description: "\nThe second matrix to compare.\n"
    return:
      type: System.Boolean
      description: "\nTrue if the given matrices are not equal; False if they are equal.\n"
    content.vb: Public Shared Operator <>(value1 As Matrix4x4D, value2 As Matrix4x4D) As Boolean
  overload: MathStructs.Matrix4x4D.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.op_Multiply(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.op_Multiply(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  id: op_Multiply(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Multiply(Matrix4x4D, Matrix4x4D)
  nameWithType: Matrix4x4D.Multiply(Matrix4x4D, Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Multiply(MathStructs.Matrix4x4D, MathStructs.Matrix4x4D)
  type: Operator
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: op_Multiply
    path: Matrix4x4D.cs
    startLine: 1343
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nMultiplies a matrix by another matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D operator *(Matrix4x4D value1, Matrix4x4D value2)
    parameters:
    - id: value1
      type: MathStructs.Matrix4x4D
      description: "\nThe first source matrix.\n"
    - id: value2
      type: MathStructs.Matrix4x4D
      description: "\nThe second source matrix.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Operator *(value1 As Matrix4x4D, value2 As Matrix4x4D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.op_Multiply(MathStructs.Matrix4x4D,System.Double)
  commentId: M:MathStructs.Matrix4x4D.op_Multiply(MathStructs.Matrix4x4D,System.Double)
  id: op_Multiply(MathStructs.Matrix4x4D,System.Double)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Multiply(Matrix4x4D, Double)
  nameWithType: Matrix4x4D.Multiply(Matrix4x4D, Double)
  fullName: MathStructs.Matrix4x4D.Multiply(MathStructs.Matrix4x4D, System.Double)
  type: Operator
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: op_Multiply
    path: Matrix4x4D.cs
    startLine: 1453
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nMultiplies a matrix by a scalar value.\n"
  example: []
  syntax:
    content: public static Matrix4x4D operator *(Matrix4x4D value1, double value2)
    parameters:
    - id: value1
      type: MathStructs.Matrix4x4D
      description: "\nThe source matrix.\n"
    - id: value2
      type: System.Double
      description: "\nThe scaling factor.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Operator *(value1 As Matrix4x4D, value2 As Double) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.op_UnaryPlus(MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.op_UnaryPlus(MathStructs.Matrix4x4D)
  id: op_UnaryPlus(MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: UnaryPlus(Matrix4x4D)
  nameWithType: Matrix4x4D.UnaryPlus(Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.UnaryPlus(MathStructs.Matrix4x4D)
  type: Operator
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: op_UnaryPlus
    path: Matrix4x4D.cs
    startLine: 1519
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns itself.\n"
  example: []
  syntax:
    content: public static Matrix4x4D operator +(Matrix4x4D value)
    parameters:
    - id: value
      type: MathStructs.Matrix4x4D
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Operator +(value As Matrix4x4D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.op_UnaryPlus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.op_Addition(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.op_Addition(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  id: op_Addition(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Addition(Matrix4x4D, Matrix4x4D)
  nameWithType: Matrix4x4D.Addition(Matrix4x4D, Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Addition(MathStructs.Matrix4x4D, MathStructs.Matrix4x4D)
  type: Operator
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: op_Addition
    path: Matrix4x4D.cs
    startLine: 1532
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nAdds two matrices together.\n"
  example: []
  syntax:
    content: public static Matrix4x4D operator +(Matrix4x4D left, Matrix4x4D right)
    parameters:
    - id: left
      type: MathStructs.Matrix4x4D
      description: "\nThe first source matrix.\n"
    - id: right
      type: MathStructs.Matrix4x4D
      description: "\nThe second source matrix.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Operator +(left As Matrix4x4D, right As Matrix4x4D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.op_Equality(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.op_Equality(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  id: op_Equality(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Equality(Matrix4x4D, Matrix4x4D)
  nameWithType: Matrix4x4D.Equality(Matrix4x4D, Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Equality(MathStructs.Matrix4x4D, MathStructs.Matrix4x4D)
  type: Operator
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: op_Equality
    path: Matrix4x4D.cs
    startLine: 1562
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns a boolean indicating whether the given two matrices are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(Matrix4x4D value1, Matrix4x4D value2)
    parameters:
    - id: value1
      type: MathStructs.Matrix4x4D
      description: "\nThe first matrix to compare.\n"
    - id: value2
      type: MathStructs.Matrix4x4D
      description: "\nThe second matrix to compare.\n"
    return:
      type: System.Boolean
      description: "\nTrue if the given matrices are equal; False otherwise.\n"
    content.vb: Public Shared Operator =(value1 As Matrix4x4D, value2 As Matrix4x4D) As Boolean
  overload: MathStructs.Matrix4x4D.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.Subtract(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.Subtract(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  id: Subtract(MathStructs.Matrix4x4D,MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Subtract(Matrix4x4D, Matrix4x4D)
  nameWithType: Matrix4x4D.Subtract(Matrix4x4D, Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Subtract(MathStructs.Matrix4x4D, MathStructs.Matrix4x4D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Subtract
    path: Matrix4x4D.cs
    startLine: 1611
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nSubtracts the second matrix from the first.\n"
  example: []
  syntax:
    content: public static Matrix4x4D Subtract(Matrix4x4D left, Matrix4x4D right)
    parameters:
    - id: left
      type: MathStructs.Matrix4x4D
      description: "\nThe first source matrix.\n"
    - id: right
      type: MathStructs.Matrix4x4D
      description: "\nThe second source matrix.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function Subtract(left As Matrix4x4D, right As Matrix4x4D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Subtract*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.Transform(MathStructs.Matrix4x4D,MathStructs.QuaternionD)
  commentId: M:MathStructs.Matrix4x4D.Transform(MathStructs.Matrix4x4D,MathStructs.QuaternionD)
  id: Transform(MathStructs.Matrix4x4D,MathStructs.QuaternionD)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Transform(Matrix4x4D, QuaternionD)
  nameWithType: Matrix4x4D.Transform(Matrix4x4D, QuaternionD)
  fullName: MathStructs.Matrix4x4D.Transform(MathStructs.Matrix4x4D, MathStructs.QuaternionD)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Transform
    path: Matrix4x4D.cs
    startLine: 1624
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nTransforms the given matrix by applying the given Quaternion rotation\n"
  example: []
  syntax:
    content: public static Matrix4x4D Transform(Matrix4x4D value, QuaternionD rotation)
    parameters:
    - id: value
      type: MathStructs.Matrix4x4D
      description: "\nThe source matrix to transform.\n"
    - id: rotation
      type: MathStructs.QuaternionD
      description: "\nThe rotation to apply.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function Transform(value As Matrix4x4D, rotation As QuaternionD) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.Transpose(MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.Transpose(MathStructs.Matrix4x4D)
  id: Transpose(MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Transpose(Matrix4x4D)
  nameWithType: Matrix4x4D.Transpose(Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Transpose(MathStructs.Matrix4x4D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Transpose
    path: Matrix4x4D.cs
    startLine: 1634
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nTransposes the rows and columns of a matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4D Transpose(Matrix4x4D matrix)
    parameters:
    - id: matrix
      type: MathStructs.Matrix4x4D
      description: "\nThe source matrix.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Shared Function Transpose(matrix As Matrix4x4D) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Transpose*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MathStructs.Matrix4x4D.Deconstruct(MathStructs.Vector3D@,MathStructs.QuaternionD@,MathStructs.Vector3D@)
  commentId: M:MathStructs.Matrix4x4D.Deconstruct(MathStructs.Vector3D@,MathStructs.QuaternionD@,MathStructs.Vector3D@)
  id: Deconstruct(MathStructs.Vector3D@,MathStructs.QuaternionD@,MathStructs.Vector3D@)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Deconstruct(out Vector3D, out QuaternionD, out Vector3D)
  nameWithType: Matrix4x4D.Deconstruct(out Vector3D, out QuaternionD, out Vector3D)
  fullName: MathStructs.Matrix4x4D.Deconstruct(out MathStructs.Vector3D, out MathStructs.QuaternionD, out MathStructs.Vector3D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Deconstruct
    path: Matrix4x4D.cs
    startLine: 1655
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nExtracts the scale, translation, and rotation components from this scale/rotation/translation matrix.\n"
  example: []
  syntax:
    content: public void Deconstruct(out Vector3D scale, out QuaternionD rotation, out Vector3D translation)
    parameters:
    - id: scale
      type: MathStructs.Vector3D
      description: "\nThe scaling component of this transformation matrix.\n"
    - id: rotation
      type: MathStructs.QuaternionD
      description: "\nThe rotation component of this transformation matrix.\n"
    - id: translation
      type: MathStructs.Vector3D
      description: "\nThe translation component of the transformation matrix.\n"
    content.vb: Public Sub Deconstruct(ByRef scale As Vector3D, ByRef rotation As QuaternionD, ByRef translation As Vector3D)
  overload: MathStructs.Matrix4x4D.Deconstruct*
  nameWithType.vb: Matrix4x4D.Deconstruct(ByRef Vector3D, ByRef QuaternionD, ByRef Vector3D)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MathStructs.Matrix4x4D.Deconstruct(ByRef MathStructs.Vector3D, ByRef MathStructs.QuaternionD, ByRef MathStructs.Vector3D)
  name.vb: Deconstruct(ByRef Vector3D, ByRef QuaternionD, ByRef Vector3D)
- uid: MathStructs.Matrix4x4D.Equals(MathStructs.Matrix4x4D)
  commentId: M:MathStructs.Matrix4x4D.Equals(MathStructs.Matrix4x4D)
  id: Equals(MathStructs.Matrix4x4D)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Equals(Matrix4x4D)
  nameWithType: Matrix4x4D.Equals(Matrix4x4D)
  fullName: MathStructs.Matrix4x4D.Equals(MathStructs.Matrix4x4D)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Equals
    path: Matrix4x4D.cs
    startLine: 1773
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns a boolean indicating whether this matrix instance is equal to the other given matrix.\n"
  example: []
  syntax:
    content: public bool Equals(Matrix4x4D other)
    parameters:
    - id: other
      type: MathStructs.Matrix4x4D
      description: "\nThe matrix to compare this instance to.\n"
    return:
      type: System.Boolean
      description: "\nTrue if the matrices are equal; False otherwise.\n"
    content.vb: Public Function Equals(other As Matrix4x4D) As Boolean
  overload: MathStructs.Matrix4x4D.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.Equals(System.Object)
  commentId: M:MathStructs.Matrix4x4D.Equals(System.Object)
  id: Equals(System.Object)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Matrix4x4D.Equals(Object)
  fullName: MathStructs.Matrix4x4D.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Equals
    path: Matrix4x4D.cs
    startLine: 1786
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns a boolean indicating whether the given Object is equal to this matrix instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: "\nThe Object to compare against.\n"
    return:
      type: System.Boolean
      description: "\nTrue if the Object is equal to this matrix; False otherwise.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: MathStructs.Matrix4x4D.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MathStructs.Matrix4x4D.GetDeterminant
  commentId: M:MathStructs.Matrix4x4D.GetDeterminant
  id: GetDeterminant
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: GetDeterminant()
  nameWithType: Matrix4x4D.GetDeterminant()
  fullName: MathStructs.Matrix4x4D.GetDeterminant()
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: GetDeterminant
    path: Matrix4x4D.cs
    startLine: 1799
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nCalculates the determinant of the matrix.\n"
  example: []
  syntax:
    content: public double GetDeterminant()
    return:
      type: System.Double
    content.vb: Public Function GetDeterminant As Double
  overload: MathStructs.Matrix4x4D.GetDeterminant*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.GetHashCode
  commentId: M:MathStructs.Matrix4x4D.GetHashCode
  id: GetHashCode
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Matrix4x4D.GetHashCode()
  fullName: MathStructs.Matrix4x4D.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: GetHashCode
    path: Matrix4x4D.cs
    startLine: 1862
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns the hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: MathStructs.Matrix4x4D.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MathStructs.Matrix4x4D.Invert
  commentId: M:MathStructs.Matrix4x4D.Invert
  id: Invert
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Invert()
  nameWithType: Matrix4x4D.Invert()
  fullName: MathStructs.Matrix4x4D.Invert()
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Invert
    path: Matrix4x4D.cs
    startLine: 1890
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nAttempts to calculate the inverse of this matrix. If successful, the inverted matrix will be returned.\n"
  example: []
  syntax:
    content: public Matrix4x4D Invert()
    return:
      type: MathStructs.Matrix4x4D
      description: "\nThe inverted matrix or a NaN matrix if the inverse could not be calculated.\n"
    content.vb: Public Function Invert As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Invert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.ToString
  commentId: M:MathStructs.Matrix4x4D.ToString
  id: ToString
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Matrix4x4D.ToString()
  fullName: MathStructs.Matrix4x4D.ToString()
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: ToString
    path: Matrix4x4D.cs
    startLine: 1897
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nReturns a String representing this matrix instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: MathStructs.Matrix4x4D.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MathStructs.Matrix4x4D.Transform(MathStructs.QuaternionD)
  commentId: M:MathStructs.Matrix4x4D.Transform(MathStructs.QuaternionD)
  id: Transform(MathStructs.QuaternionD)
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Transform(QuaternionD)
  nameWithType: Matrix4x4D.Transform(QuaternionD)
  fullName: MathStructs.Matrix4x4D.Transform(MathStructs.QuaternionD)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Transform
    path: Matrix4x4D.cs
    startLine: 1906
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nTransforms this matrix by applying the given Quaternion rotation\n"
  example: []
  syntax:
    content: public Matrix4x4D Transform(QuaternionD rotation)
    parameters:
    - id: rotation
      type: MathStructs.QuaternionD
      description: "\nThe rotation to apply.\n"
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Function Transform(rotation As QuaternionD) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Transform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.Transpose
  commentId: M:MathStructs.Matrix4x4D.Transpose
  id: Transpose
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: Transpose()
  nameWithType: Matrix4x4D.Transpose()
  fullName: MathStructs.Matrix4x4D.Transpose()
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: Transpose
    path: Matrix4x4D.cs
    startLine: 1956
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nTransposes the rows and columns of this matrix.\n"
  example: []
  syntax:
    content: public Matrix4x4D Transpose()
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Function Transpose As Matrix4x4D
  overload: MathStructs.Matrix4x4D.Transpose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathStructs.Matrix4x4D.With(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  commentId: M:MathStructs.Matrix4x4D.With(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  id: With(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  parent: MathStructs.Matrix4x4D
  langs:
  - csharp
  - vb
  name: With(Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>)
  nameWithType: Matrix4x4D.With(Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>, Nullable<Double>)
  fullName: MathStructs.Matrix4x4D.With(System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Double>)
  type: Method
  source:
    remote:
      path: src/Matrix4x4D.cs
      branch: develop
      repo: https://github.com/stefanrbk/MathStructs.git
    id: With
    path: Matrix4x4D.cs
    startLine: 1963
  assemblies:
  - MathStructs
  namespace: MathStructs
  summary: "\nProvides a record-style <xref uid=\"langword_csharp_with\" name=\"with\" href=\"\"></xref>-like constructor.\n"
  example: []
  syntax:
    content: public Matrix4x4D With(double? m11 = default(double? ), double? m12 = default(double? ), double? m13 = default(double? ), double? m14 = default(double? ), double? m21 = default(double? ), double? m22 = default(double? ), double? m23 = default(double? ), double? m24 = default(double? ), double? m31 = default(double? ), double? m32 = default(double? ), double? m33 = default(double? ), double? m34 = default(double? ), double? m41 = default(double? ), double? m42 = default(double? ), double? m43 = default(double? ), double? m44 = default(double? ))
    parameters:
    - id: m11
      type: System.Nullable{System.Double}
    - id: m12
      type: System.Nullable{System.Double}
    - id: m13
      type: System.Nullable{System.Double}
    - id: m14
      type: System.Nullable{System.Double}
    - id: m21
      type: System.Nullable{System.Double}
    - id: m22
      type: System.Nullable{System.Double}
    - id: m23
      type: System.Nullable{System.Double}
    - id: m24
      type: System.Nullable{System.Double}
    - id: m31
      type: System.Nullable{System.Double}
    - id: m32
      type: System.Nullable{System.Double}
    - id: m33
      type: System.Nullable{System.Double}
    - id: m34
      type: System.Nullable{System.Double}
    - id: m41
      type: System.Nullable{System.Double}
    - id: m42
      type: System.Nullable{System.Double}
    - id: m43
      type: System.Nullable{System.Double}
    - id: m44
      type: System.Nullable{System.Double}
    return:
      type: MathStructs.Matrix4x4D
    content.vb: Public Function With(m11 As Double? = Nothing, m12 As Double? = Nothing, m13 As Double? = Nothing, m14 As Double? = Nothing, m21 As Double? = Nothing, m22 As Double? = Nothing, m23 As Double? = Nothing, m24 As Double? = Nothing, m31 As Double? = Nothing, m32 As Double? = Nothing, m33 As Double? = Nothing, m34 As Double? = Nothing, m41 As Double? = Nothing, m42 As Double? = Nothing, m43 As Double? = Nothing, m44 As Double? = Nothing) As Matrix4x4D
  overload: MathStructs.Matrix4x4D.With*
  nameWithType.vb: Matrix4x4D.With(Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MathStructs.Matrix4x4D.With(System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Double))
  name.vb: With(Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double), Nullable(Of Double))
references:
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: MathStructs
  commentId: N:MathStructs
  name: MathStructs
  nameWithType: MathStructs
  fullName: MathStructs
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MathStructs.Matrix4x4D
  commentId: T:MathStructs.Matrix4x4D
  parent: MathStructs
  name: Matrix4x4D
  nameWithType: Matrix4x4D
  fullName: MathStructs.Matrix4x4D
- uid: MathStructs.Matrix4x4D.#ctor*
  commentId: Overload:MathStructs.Matrix4x4D.#ctor
  name: Matrix4x4D
  nameWithType: Matrix4x4D.Matrix4x4D
  fullName: MathStructs.Matrix4x4D.Matrix4x4D
- uid: MathStructs.Matrix3x3D
  commentId: T:MathStructs.Matrix3x3D
  parent: MathStructs
  name: Matrix3x3D
  nameWithType: Matrix3x3D
  fullName: MathStructs.Matrix3x3D
- uid: MathStructs.Matrix4x4D.Identity*
  commentId: Overload:MathStructs.Matrix4x4D.Identity
  name: Identity
  nameWithType: Matrix4x4D.Identity
  fullName: MathStructs.Matrix4x4D.Identity
- uid: MathStructs.Matrix4x4D.NaN*
  commentId: Overload:MathStructs.Matrix4x4D.NaN
  name: NaN
  nameWithType: Matrix4x4D.NaN
  fullName: MathStructs.Matrix4x4D.NaN
- uid: MathStructs.Matrix4x4D.IsIdentity*
  commentId: Overload:MathStructs.Matrix4x4D.IsIdentity
  name: IsIdentity
  nameWithType: Matrix4x4D.IsIdentity
  fullName: MathStructs.Matrix4x4D.IsIdentity
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: MathStructs.Matrix4x4D.Translation*
  commentId: Overload:MathStructs.Matrix4x4D.Translation
  name: Translation
  nameWithType: Matrix4x4D.Translation
  fullName: MathStructs.Matrix4x4D.Translation
- uid: MathStructs.Vector3D
  commentId: T:MathStructs.Vector3D
  parent: MathStructs
  name: Vector3D
  nameWithType: Vector3D
  fullName: MathStructs.Vector3D
- uid: MathStructs.Matrix4x4D.Add*
  commentId: Overload:MathStructs.Matrix4x4D.Add
  name: Add
  nameWithType: Matrix4x4D.Add
  fullName: MathStructs.Matrix4x4D.Add
- uid: MathStructs.Matrix4x4D.CreateBillboard*
  commentId: Overload:MathStructs.Matrix4x4D.CreateBillboard
  name: CreateBillboard
  nameWithType: Matrix4x4D.CreateBillboard
  fullName: MathStructs.Matrix4x4D.CreateBillboard
- uid: MathStructs.Matrix4x4D.CreateConstrainedBillboard*
  commentId: Overload:MathStructs.Matrix4x4D.CreateConstrainedBillboard
  name: CreateConstrainedBillboard
  nameWithType: Matrix4x4D.CreateConstrainedBillboard
  fullName: MathStructs.Matrix4x4D.CreateConstrainedBillboard
- uid: MathStructs.Matrix4x4D.CreateFromAxisAngle*
  commentId: Overload:MathStructs.Matrix4x4D.CreateFromAxisAngle
  name: CreateFromAxisAngle
  nameWithType: Matrix4x4D.CreateFromAxisAngle
  fullName: MathStructs.Matrix4x4D.CreateFromAxisAngle
- uid: MathStructs.QuaternionD
  commentId: T:MathStructs.QuaternionD
  parent: MathStructs
  name: QuaternionD
  nameWithType: QuaternionD
  fullName: MathStructs.QuaternionD
- uid: MathStructs.Matrix4x4D.CreateFromQuaternion*
  commentId: Overload:MathStructs.Matrix4x4D.CreateFromQuaternion
  name: CreateFromQuaternion
  nameWithType: Matrix4x4D.CreateFromQuaternion
  fullName: MathStructs.Matrix4x4D.CreateFromQuaternion
- uid: MathStructs.Matrix4x4D.CreateFromYawPitchRoll*
  commentId: Overload:MathStructs.Matrix4x4D.CreateFromYawPitchRoll
  name: CreateFromYawPitchRoll
  nameWithType: Matrix4x4D.CreateFromYawPitchRoll
  fullName: MathStructs.Matrix4x4D.CreateFromYawPitchRoll
- uid: MathStructs.Matrix4x4D.CreateLookAt*
  commentId: Overload:MathStructs.Matrix4x4D.CreateLookAt
  name: CreateLookAt
  nameWithType: Matrix4x4D.CreateLookAt
  fullName: MathStructs.Matrix4x4D.CreateLookAt
- uid: MathStructs.Matrix4x4D.CreateOrthographic*
  commentId: Overload:MathStructs.Matrix4x4D.CreateOrthographic
  name: CreateOrthographic
  nameWithType: Matrix4x4D.CreateOrthographic
  fullName: MathStructs.Matrix4x4D.CreateOrthographic
- uid: MathStructs.Matrix4x4D.CreateOrthographicOffCenter*
  commentId: Overload:MathStructs.Matrix4x4D.CreateOrthographicOffCenter
  name: CreateOrthographicOffCenter
  nameWithType: Matrix4x4D.CreateOrthographicOffCenter
  fullName: MathStructs.Matrix4x4D.CreateOrthographicOffCenter
- uid: MathStructs.Matrix4x4D.CreatePerspective*
  commentId: Overload:MathStructs.Matrix4x4D.CreatePerspective
  name: CreatePerspective
  nameWithType: Matrix4x4D.CreatePerspective
  fullName: MathStructs.Matrix4x4D.CreatePerspective
- uid: MathStructs.Matrix4x4D.CreatePerspectiveFieldOfView*
  commentId: Overload:MathStructs.Matrix4x4D.CreatePerspectiveFieldOfView
  name: CreatePerspectiveFieldOfView
  nameWithType: Matrix4x4D.CreatePerspectiveFieldOfView
  fullName: MathStructs.Matrix4x4D.CreatePerspectiveFieldOfView
- uid: MathStructs.Matrix4x4D.CreatePerspectiveOffCenter*
  commentId: Overload:MathStructs.Matrix4x4D.CreatePerspectiveOffCenter
  name: CreatePerspectiveOffCenter
  nameWithType: Matrix4x4D.CreatePerspectiveOffCenter
  fullName: MathStructs.Matrix4x4D.CreatePerspectiveOffCenter
- uid: MathStructs.Matrix4x4D.CreateReflection*
  commentId: Overload:MathStructs.Matrix4x4D.CreateReflection
  name: CreateReflection
  nameWithType: Matrix4x4D.CreateReflection
  fullName: MathStructs.Matrix4x4D.CreateReflection
- uid: MathStructs.PlaneD
  commentId: T:MathStructs.PlaneD
  parent: MathStructs
  name: PlaneD
  nameWithType: PlaneD
  fullName: MathStructs.PlaneD
- uid: MathStructs.Matrix4x4D.CreateRotationX*
  commentId: Overload:MathStructs.Matrix4x4D.CreateRotationX
  name: CreateRotationX
  nameWithType: Matrix4x4D.CreateRotationX
  fullName: MathStructs.Matrix4x4D.CreateRotationX
- uid: MathStructs.Matrix4x4D.CreateRotationY*
  commentId: Overload:MathStructs.Matrix4x4D.CreateRotationY
  name: CreateRotationY
  nameWithType: Matrix4x4D.CreateRotationY
  fullName: MathStructs.Matrix4x4D.CreateRotationY
- uid: MathStructs.Matrix4x4D.CreateRotationZ*
  commentId: Overload:MathStructs.Matrix4x4D.CreateRotationZ
  name: CreateRotationZ
  nameWithType: Matrix4x4D.CreateRotationZ
  fullName: MathStructs.Matrix4x4D.CreateRotationZ
- uid: MathStructs.Matrix4x4D.CreateScale*
  commentId: Overload:MathStructs.Matrix4x4D.CreateScale
  name: CreateScale
  nameWithType: Matrix4x4D.CreateScale
  fullName: MathStructs.Matrix4x4D.CreateScale
- uid: MathStructs.Matrix4x4D.CreateShadow*
  commentId: Overload:MathStructs.Matrix4x4D.CreateShadow
  name: CreateShadow
  nameWithType: Matrix4x4D.CreateShadow
  fullName: MathStructs.Matrix4x4D.CreateShadow
- uid: MathStructs.Matrix4x4D.CreateTranslation*
  commentId: Overload:MathStructs.Matrix4x4D.CreateTranslation
  name: CreateTranslation
  nameWithType: Matrix4x4D.CreateTranslation
  fullName: MathStructs.Matrix4x4D.CreateTranslation
- uid: MathStructs.Matrix4x4D.CreateWorld*
  commentId: Overload:MathStructs.Matrix4x4D.CreateWorld
  name: CreateWorld
  nameWithType: Matrix4x4D.CreateWorld
  fullName: MathStructs.Matrix4x4D.CreateWorld
- uid: MathStructs.Matrix4x4D.Decompose*
  commentId: Overload:MathStructs.Matrix4x4D.Decompose
  name: Decompose
  nameWithType: Matrix4x4D.Decompose
  fullName: MathStructs.Matrix4x4D.Decompose
- uid: MathStructs.Matrix4x4D.Invert*
  commentId: Overload:MathStructs.Matrix4x4D.Invert
  name: Invert
  nameWithType: Matrix4x4D.Invert
  fullName: MathStructs.Matrix4x4D.Invert
- uid: MathStructs.Matrix4x4D.Lerp*
  commentId: Overload:MathStructs.Matrix4x4D.Lerp
  name: Lerp
  nameWithType: Matrix4x4D.Lerp
  fullName: MathStructs.Matrix4x4D.Lerp
- uid: MathStructs.Matrix4x4D.Multiply*
  commentId: Overload:MathStructs.Matrix4x4D.Multiply
  name: Multiply
  nameWithType: Matrix4x4D.Multiply
  fullName: MathStructs.Matrix4x4D.Multiply
- uid: MathStructs.Matrix4x4D.Negate*
  commentId: Overload:MathStructs.Matrix4x4D.Negate
  name: Negate
  nameWithType: Matrix4x4D.Negate
  fullName: MathStructs.Matrix4x4D.Negate
- uid: MathStructs.Matrix4x4D.op_UnaryNegation*
  commentId: Overload:MathStructs.Matrix4x4D.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Matrix4x4D.UnaryNegation
  fullName: MathStructs.Matrix4x4D.UnaryNegation
- uid: MathStructs.Matrix4x4D.op_Subtraction*
  commentId: Overload:MathStructs.Matrix4x4D.op_Subtraction
  name: Subtraction
  nameWithType: Matrix4x4D.Subtraction
  fullName: MathStructs.Matrix4x4D.Subtraction
- uid: MathStructs.Matrix4x4D.op_Inequality*
  commentId: Overload:MathStructs.Matrix4x4D.op_Inequality
  name: Inequality
  nameWithType: Matrix4x4D.Inequality
  fullName: MathStructs.Matrix4x4D.Inequality
- uid: MathStructs.Matrix4x4D.op_Multiply*
  commentId: Overload:MathStructs.Matrix4x4D.op_Multiply
  name: Multiply
  nameWithType: Matrix4x4D.Multiply
  fullName: MathStructs.Matrix4x4D.Multiply
- uid: MathStructs.Matrix4x4D.op_UnaryPlus*
  commentId: Overload:MathStructs.Matrix4x4D.op_UnaryPlus
  name: UnaryPlus
  nameWithType: Matrix4x4D.UnaryPlus
  fullName: MathStructs.Matrix4x4D.UnaryPlus
- uid: MathStructs.Matrix4x4D.op_Addition*
  commentId: Overload:MathStructs.Matrix4x4D.op_Addition
  name: Addition
  nameWithType: Matrix4x4D.Addition
  fullName: MathStructs.Matrix4x4D.Addition
- uid: MathStructs.Matrix4x4D.op_Equality*
  commentId: Overload:MathStructs.Matrix4x4D.op_Equality
  name: Equality
  nameWithType: Matrix4x4D.Equality
  fullName: MathStructs.Matrix4x4D.Equality
- uid: MathStructs.Matrix4x4D.Subtract*
  commentId: Overload:MathStructs.Matrix4x4D.Subtract
  name: Subtract
  nameWithType: Matrix4x4D.Subtract
  fullName: MathStructs.Matrix4x4D.Subtract
- uid: MathStructs.Matrix4x4D.Transform*
  commentId: Overload:MathStructs.Matrix4x4D.Transform
  name: Transform
  nameWithType: Matrix4x4D.Transform
  fullName: MathStructs.Matrix4x4D.Transform
- uid: MathStructs.Matrix4x4D.Transpose*
  commentId: Overload:MathStructs.Matrix4x4D.Transpose
  name: Transpose
  nameWithType: Matrix4x4D.Transpose
  fullName: MathStructs.Matrix4x4D.Transpose
- uid: MathStructs.Matrix4x4D.Deconstruct*
  commentId: Overload:MathStructs.Matrix4x4D.Deconstruct
  name: Deconstruct
  nameWithType: Matrix4x4D.Deconstruct
  fullName: MathStructs.Matrix4x4D.Deconstruct
- uid: MathStructs.Matrix4x4D.Equals*
  commentId: Overload:MathStructs.Matrix4x4D.Equals
  name: Equals
  nameWithType: Matrix4x4D.Equals
  fullName: MathStructs.Matrix4x4D.Equals
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: MathStructs.Matrix4x4D.GetDeterminant*
  commentId: Overload:MathStructs.Matrix4x4D.GetDeterminant
  name: GetDeterminant
  nameWithType: Matrix4x4D.GetDeterminant
  fullName: MathStructs.Matrix4x4D.GetDeterminant
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MathStructs.Matrix4x4D.GetHashCode*
  commentId: Overload:MathStructs.Matrix4x4D.GetHashCode
  name: GetHashCode
  nameWithType: Matrix4x4D.GetHashCode
  fullName: MathStructs.Matrix4x4D.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MathStructs.Matrix4x4D.ToString*
  commentId: Overload:MathStructs.Matrix4x4D.ToString
  name: ToString
  nameWithType: Matrix4x4D.ToString
  fullName: MathStructs.Matrix4x4D.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MathStructs.Matrix4x4D.With*
  commentId: Overload:MathStructs.Matrix4x4D.With
  name: With
  nameWithType: Matrix4x4D.With
  fullName: MathStructs.Matrix4x4D.With
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
